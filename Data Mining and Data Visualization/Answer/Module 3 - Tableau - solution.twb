<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Intersection_Collision_Summary__2010_-_2011_' inline='true' name='federated.15ryj38172hj8v0zpnpa715924ay' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Intersection_Collision_Summary__2010_-_2011_' name='textscan.1rho36r10mr9n3180p2at1xn80gm'>
            <connection class='textscan' directory='C:/Users/Administrator/Desktop' filename='Intersection_Collision_Summary__2010_-_2011_.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rho36r10mr9n3180p2at1xn80gm' name='Intersection_Collision_Summary__2010_-_2011_.csv' table='[Intersection_Collision_Summary__2010_-_2011_#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='YEAR' ordinal='0' />
            <column datatype='string' name='INTERSECTION_NAME' ordinal='1' />
            <column datatype='integer' name='TOTAL_COLLISIONS' ordinal='2' />
            <column datatype='integer' name='MINOR_INJURIES' ordinal='3' />
            <column datatype='integer' name='MAJOR_INJURIES' ordinal='4' />
            <column datatype='integer' name='FATALITIES' ordinal='5' />
            <column datatype='integer' name='FOLLOWED_TOO_CLOSELY' ordinal='6' />
            <column datatype='integer' name='STRUCK_PARKED_VEHICLE' ordinal='7' />
            <column datatype='integer' name='IMPROPER_LANE_CHANGE' ordinal='8' />
            <column datatype='integer' name='RAN_OFF_ROAD' ordinal='9' />
            <column datatype='integer' name='FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)' ordinal='10' />
            <column datatype='integer' name='BACKED_UNSAFELY' ordinal='11' />
            <column datatype='integer' name='LEFT_OF_CENTRE' ordinal='12' />
            <column datatype='integer' name='LEFT_TURN_ACROSS_PATH' ordinal='13' />
            <column datatype='integer' name='ANIMAL_ACTION' ordinal='14' />
            <column datatype='integer' name='IMPROPER_TURN' ordinal='15' />
            <column datatype='integer' name='STOP_SIGN_VIOLATION' ordinal='16' />
            <column datatype='integer' name='OTHER' ordinal='17' />
            <column datatype='integer' name='PEDESTRIAN_ERROR/VIOLATION' ordinal='18' />
            <column datatype='integer' name='IMPROPER_PASSING' ordinal='19' />
            <column datatype='integer' name='FAILED_TO_YIELD_TO_PEDESTRIAN' ordinal='20' />
            <column datatype='integer' name='IMPROPER_LOADING' ordinal='21' />
            <column datatype='integer' name='DRIVERLESS_VEHICLE' ordinal='22' />
            <column datatype='integer' name='FAILED_TO_OBSERVE_TRAFFIC_SIGNAL' ordinal='23' />
            <column datatype='integer' name='FAILED_TO_YIELD_TO_CYCLIST' ordinal='24' />
            <column datatype='integer' name='SIGNED_FORCED_TURN_VIOLATION' ordinal='25' />
            <column datatype='integer' name='CYCLST_ERROR/VIOLATION' ordinal='26' />
            <column datatype='integer' name='OVERSIZE_VEHICLE' ordinal='27' />
            <column datatype='integer' name='UNKNOWN' ordinal='28' />
            <column datatype='integer' name='ONE_WAY_VIOLATION' ordinal='29' />
            <column datatype='integer' name='YIELD_SIGN_VIOLATION' ordinal='30' />
            <column datatype='integer' name='INANIMATE_OBJECT_ACTION' ordinal='31' />
            <column datatype='integer' name='OPENED_DOOR_INTO_TRAFFIC' ordinal='32' />
            <column datatype='real' name='LATITUDE' ordinal='33' />
            <column datatype='real' name='LONGITUDE' ordinal='34' />
            <column datatype='string' name='LOCATION' ordinal='35' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INTERSECTION_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INTERSECTION_NAME]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>INTERSECTION_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_COLLISIONS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_COLLISIONS]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>TOTAL_COLLISIONS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MINOR_INJURIES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MINOR_INJURIES]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>MINOR_INJURIES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAJOR_INJURIES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MAJOR_INJURIES]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>MAJOR_INJURIES</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FATALITIES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FATALITIES]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FATALITIES</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOLLOWED_TOO_CLOSELY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FOLLOWED_TOO_CLOSELY]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FOLLOWED_TOO_CLOSELY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCK_PARKED_VEHICLE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STRUCK_PARKED_VEHICLE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>STRUCK_PARKED_VEHICLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMPROPER_LANE_CHANGE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMPROPER_LANE_CHANGE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>IMPROPER_LANE_CHANGE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAN_OFF_ROAD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RAN_OFF_ROAD]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>RAN_OFF_ROAD</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BACKED_UNSAFELY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BACKED_UNSAFELY]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>BACKED_UNSAFELY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEFT_OF_CENTRE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LEFT_OF_CENTRE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>LEFT_OF_CENTRE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEFT_TURN_ACROSS_PATH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LEFT_TURN_ACROSS_PATH]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>LEFT_TURN_ACROSS_PATH</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANIMAL_ACTION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ANIMAL_ACTION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>ANIMAL_ACTION</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMPROPER_TURN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMPROPER_TURN]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>IMPROPER_TURN</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STOP_SIGN_VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STOP_SIGN_VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>STOP_SIGN_VIOLATION</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OTHER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OTHER]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>OTHER</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEDESTRIAN_ERROR/VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEDESTRIAN_ERROR/VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>PEDESTRIAN_ERROR/VIOLATION</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMPROPER_PASSING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMPROPER_PASSING]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>IMPROPER_PASSING</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAILED_TO_YIELD_TO_PEDESTRIAN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FAILED_TO_YIELD_TO_PEDESTRIAN]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FAILED_TO_YIELD_TO_PEDESTRIAN</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMPROPER_LOADING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMPROPER_LOADING]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>IMPROPER_LOADING</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRIVERLESS_VEHICLE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DRIVERLESS_VEHICLE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>DRIVERLESS_VEHICLE</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAILED_TO_OBSERVE_TRAFFIC_SIGNAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FAILED_TO_OBSERVE_TRAFFIC_SIGNAL</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAILED_TO_YIELD_TO_CYCLIST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FAILED_TO_YIELD_TO_CYCLIST]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>FAILED_TO_YIELD_TO_CYCLIST</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SIGNED_FORCED_TURN_VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SIGNED_FORCED_TURN_VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>SIGNED_FORCED_TURN_VIOLATION</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CYCLST_ERROR/VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CYCLST_ERROR/VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>CYCLST_ERROR/VIOLATION</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OVERSIZE_VEHICLE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OVERSIZE_VEHICLE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>OVERSIZE_VEHICLE</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNKNOWN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UNKNOWN]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>UNKNOWN</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ONE_WAY_VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ONE_WAY_VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>ONE_WAY_VIOLATION</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YIELD_SIGN_VIOLATION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YIELD_SIGN_VIOLATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>YIELD_SIGN_VIOLATION</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INANIMATE_OBJECT_ACTION</remote-name>
            <remote-type>20</remote-type>
            <local-name>[INANIMATE_OBJECT_ACTION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>INANIMATE_OBJECT_ACTION</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPENED_DOOR_INTO_TRAFFIC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OPENED_DOOR_INTO_TRAFFIC]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>OPENED_DOOR_INTO_TRAFFIC</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[Intersection_Collision_Summary__2010_-_2011_.csv]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Animal Action' datatype='integer' name='[ANIMAL_ACTION]' role='measure' type='quantitative' />
      <column caption='Backed Unsafely' datatype='integer' name='[BACKED_UNSAFELY]' role='measure' type='quantitative' />
      <column caption='Cyclst Error/Violation' datatype='integer' name='[CYCLST_ERROR/VIOLATION]' role='measure' type='quantitative' />
      <column caption='Injuries or fatalities' datatype='integer' name='[Calculation_4446038045004603392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[MINOR_INJURIES]+[MAJOR_INJURIES]+[FATALITIES]' />
      </column>
      <column caption='Driverless Vehicle' datatype='integer' name='[DRIVERLESS_VEHICLE]' role='measure' type='quantitative' />
      <column caption='Failed To Observe Traffic Signal' datatype='integer' name='[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]' role='measure' type='quantitative' />
      <column caption='Failed To Yield Right Of Way(No Control)' datatype='integer' name='[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]' role='measure' type='quantitative' />
      <column caption='Failed To Yield To Cyclist' datatype='integer' name='[FAILED_TO_YIELD_TO_CYCLIST]' role='measure' type='quantitative' />
      <column caption='Failed To Yield To Pedestrian' datatype='integer' name='[FAILED_TO_YIELD_TO_PEDESTRIAN]' role='measure' type='quantitative' />
      <column caption='Fatalities' datatype='integer' name='[FATALITIES]' role='measure' type='quantitative' />
      <column caption='Followed Too Closely' datatype='integer' name='[FOLLOWED_TOO_CLOSELY]' role='measure' type='quantitative' />
      <column caption='Improper Lane Change' datatype='integer' name='[IMPROPER_LANE_CHANGE]' role='measure' type='quantitative' />
      <column caption='Improper Loading' datatype='integer' name='[IMPROPER_LOADING]' role='measure' type='quantitative' />
      <column caption='Improper Passing' datatype='integer' name='[IMPROPER_PASSING]' role='measure' type='quantitative' />
      <column caption='Improper Turn' datatype='integer' name='[IMPROPER_TURN]' role='measure' type='quantitative' />
      <column caption='Inanimate Object Action' datatype='integer' name='[INANIMATE_OBJECT_ACTION]' role='measure' type='quantitative' />
      <column caption='Intersection Name' datatype='string' name='[INTERSECTION_NAME]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Left Of Centre' datatype='integer' name='[LEFT_OF_CENTRE]' role='measure' type='quantitative' />
      <column caption='Left Turn Across Path' datatype='integer' name='[LEFT_TURN_ACROSS_PATH]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Major Injuries' datatype='integer' name='[MAJOR_INJURIES]' role='measure' type='quantitative' />
      <column caption='Minor Injuries' datatype='integer' name='[MINOR_INJURIES]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='One Way Violation' datatype='integer' name='[ONE_WAY_VIOLATION]' role='measure' type='quantitative' />
      <column caption='Opened Door Into Traffic' datatype='integer' name='[OPENED_DOOR_INTO_TRAFFIC]' role='measure' type='quantitative' />
      <column caption='Other' datatype='integer' name='[OTHER]' role='measure' type='quantitative' />
      <column caption='Oversize Vehicle' datatype='integer' name='[OVERSIZE_VEHICLE]' role='measure' type='quantitative' />
      <column caption='Pedestrian Error/Violation' datatype='integer' name='[PEDESTRIAN_ERROR/VIOLATION]' role='measure' type='quantitative' />
      <column caption='Ran Off Road' datatype='integer' name='[RAN_OFF_ROAD]' role='measure' type='quantitative' />
      <column caption='Signed Forced Turn Violation' datatype='integer' name='[SIGNED_FORCED_TURN_VIOLATION]' role='measure' type='quantitative' />
      <column caption='Stop Sign Violation' datatype='integer' name='[STOP_SIGN_VIOLATION]' role='measure' type='quantitative' />
      <column caption='Struck Parked Vehicle' datatype='integer' name='[STRUCK_PARKED_VEHICLE]' role='measure' type='quantitative' />
      <column caption='Total Collisions' datatype='integer' name='[TOTAL_COLLISIONS]' role='measure' type='quantitative' />
      <column caption='Unknown' datatype='integer' name='[UNKNOWN]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
      <column caption='Yield Sign Violation' datatype='integer' name='[YIELD_SIGN_VIOLATION]' role='measure' type='quantitative' />
      <column-instance column='[ANIMAL_ACTION]' derivation='Avg' name='[avg:ANIMAL_ACTION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BACKED_UNSAFELY]' derivation='Avg' name='[avg:BACKED_UNSAFELY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CYCLST_ERROR/VIOLATION]' derivation='Avg' name='[avg:CYCLST_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4446038045004603392]' derivation='Avg' name='[avg:Calculation_4446038045004603392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DRIVERLESS_VEHICLE]' derivation='Avg' name='[avg:DRIVERLESS_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]' derivation='Avg' name='[avg:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]' derivation='Avg' name='[avg:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_TO_CYCLIST]' derivation='Avg' name='[avg:FAILED_TO_YIELD_TO_CYCLIST:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_TO_PEDESTRIAN]' derivation='Avg' name='[avg:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FATALITIES]' derivation='Avg' name='[avg:FATALITIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FOLLOWED_TOO_CLOSELY]' derivation='Avg' name='[avg:FOLLOWED_TOO_CLOSELY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_LANE_CHANGE]' derivation='Avg' name='[avg:IMPROPER_LANE_CHANGE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_LOADING]' derivation='Avg' name='[avg:IMPROPER_LOADING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_PASSING]' derivation='Avg' name='[avg:IMPROPER_PASSING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_TURN]' derivation='Avg' name='[avg:IMPROPER_TURN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[INANIMATE_OBJECT_ACTION]' derivation='Avg' name='[avg:INANIMATE_OBJECT_ACTION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LEFT_OF_CENTRE]' derivation='Avg' name='[avg:LEFT_OF_CENTRE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LEFT_TURN_ACROSS_PATH]' derivation='Avg' name='[avg:LEFT_TURN_ACROSS_PATH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAJOR_INJURIES]' derivation='Avg' name='[avg:MAJOR_INJURIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MINOR_INJURIES]' derivation='Avg' name='[avg:MINOR_INJURIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ONE_WAY_VIOLATION]' derivation='Avg' name='[avg:ONE_WAY_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OPENED_DOOR_INTO_TRAFFIC]' derivation='Avg' name='[avg:OPENED_DOOR_INTO_TRAFFIC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OTHER]' derivation='Avg' name='[avg:OTHER:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OVERSIZE_VEHICLE]' derivation='Avg' name='[avg:OVERSIZE_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PEDESTRIAN_ERROR/VIOLATION]' derivation='Avg' name='[avg:PEDESTRIAN_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RAN_OFF_ROAD]' derivation='Avg' name='[avg:RAN_OFF_ROAD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SIGNED_FORCED_TURN_VIOLATION]' derivation='Avg' name='[avg:SIGNED_FORCED_TURN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STOP_SIGN_VIOLATION]' derivation='Avg' name='[avg:STOP_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STRUCK_PARKED_VEHICLE]' derivation='Avg' name='[avg:STRUCK_PARKED_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOTAL_COLLISIONS]' derivation='Avg' name='[avg:TOTAL_COLLISIONS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UNKNOWN]' derivation='Avg' name='[avg:UNKNOWN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[YIELD_SIGN_VIOLATION]' derivation='Avg' name='[avg:YIELD_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ANIMAL_ACTION]' derivation='Sum' name='[sum:ANIMAL_ACTION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BACKED_UNSAFELY]' derivation='Sum' name='[sum:BACKED_UNSAFELY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CYCLST_ERROR/VIOLATION]' derivation='Sum' name='[sum:CYCLST_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4446038045004603392]' derivation='Sum' name='[sum:Calculation_4446038045004603392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DRIVERLESS_VEHICLE]' derivation='Sum' name='[sum:DRIVERLESS_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]' derivation='Sum' name='[sum:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]' derivation='Sum' name='[sum:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_TO_CYCLIST]' derivation='Sum' name='[sum:FAILED_TO_YIELD_TO_CYCLIST:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FAILED_TO_YIELD_TO_PEDESTRIAN]' derivation='Sum' name='[sum:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FATALITIES]' derivation='Sum' name='[sum:FATALITIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FOLLOWED_TOO_CLOSELY]' derivation='Sum' name='[sum:FOLLOWED_TOO_CLOSELY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_LANE_CHANGE]' derivation='Sum' name='[sum:IMPROPER_LANE_CHANGE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_LOADING]' derivation='Sum' name='[sum:IMPROPER_LOADING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_PASSING]' derivation='Sum' name='[sum:IMPROPER_PASSING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMPROPER_TURN]' derivation='Sum' name='[sum:IMPROPER_TURN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[INANIMATE_OBJECT_ACTION]' derivation='Sum' name='[sum:INANIMATE_OBJECT_ACTION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LEFT_OF_CENTRE]' derivation='Sum' name='[sum:LEFT_OF_CENTRE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LEFT_TURN_ACROSS_PATH]' derivation='Sum' name='[sum:LEFT_TURN_ACROSS_PATH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MAJOR_INJURIES]' derivation='Sum' name='[sum:MAJOR_INJURIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MINOR_INJURIES]' derivation='Sum' name='[sum:MINOR_INJURIES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ONE_WAY_VIOLATION]' derivation='Sum' name='[sum:ONE_WAY_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OPENED_DOOR_INTO_TRAFFIC]' derivation='Sum' name='[sum:OPENED_DOOR_INTO_TRAFFIC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OTHER]' derivation='Sum' name='[sum:OTHER:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OVERSIZE_VEHICLE]' derivation='Sum' name='[sum:OVERSIZE_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PEDESTRIAN_ERROR/VIOLATION]' derivation='Sum' name='[sum:PEDESTRIAN_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RAN_OFF_ROAD]' derivation='Sum' name='[sum:RAN_OFF_ROAD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SIGNED_FORCED_TURN_VIOLATION]' derivation='Sum' name='[sum:SIGNED_FORCED_TURN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STOP_SIGN_VIOLATION]' derivation='Sum' name='[sum:STOP_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STRUCK_PARKED_VEHICLE]' derivation='Sum' name='[sum:STRUCK_PARKED_VEHICLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOTAL_COLLISIONS]' derivation='Sum' name='[sum:TOTAL_COLLISIONS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UNKNOWN]' derivation='Sum' name='[sum:UNKNOWN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[YIELD_SIGN_VIOLATION]' derivation='Sum' name='[sum:YIELD_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Intersection Name)' hidden='true' name='[Action (Intersection Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[INTERSECTION_NAME]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' hidden='true' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:LONGITUDE:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.233766' measure-ordering='alphabetic' measure-percentage='0.766234' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FATALITIES:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STOP_SIGN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FATALITIES:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:STOP_SIGN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ANIMAL_ACTION:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:ANIMAL_ACTION:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OVERSIZE_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:OVERSIZE_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_PASSING:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:YIELD_SIGN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:IMPROPER_PASSING:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:YIELD_SIGN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FOLLOWED_TOO_CLOSELY:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STRUCK_PARKED_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FOLLOWED_TOO_CLOSELY:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:STRUCK_PARKED_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:PEDESTRIAN_ERROR/VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:PEDESTRIAN_ERROR/VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MAJOR_INJURIES:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:MAJOR_INJURIES:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:BACKED_UNSAFELY:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ONE_WAY_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:BACKED_UNSAFELY:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:ONE_WAY_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_OF_CENTRE:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:LEFT_OF_CENTRE:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_CYCLIST:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:RAN_OFF_ROAD:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FAILED_TO_YIELD_TO_CYCLIST:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:RAN_OFF_ROAD:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_TURN:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:IMPROPER_TURN:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:INANIMATE_OBJECT_ACTION:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:INANIMATE_OBJECT_ACTION:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_TURN_ACROSS_PATH:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:LEFT_TURN_ACROSS_PATH:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MINOR_INJURIES:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:MINOR_INJURIES:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LANE_CHANGE:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:IMPROPER_LANE_CHANGE:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:TOTAL_COLLISIONS:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:SIGNED_FORCED_TURN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:SIGNED_FORCED_TURN_VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:CYCLST_ERROR/VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OPENED_DOOR_INTO_TRAFFIC:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:CYCLST_ERROR/VIOLATION:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:OPENED_DOOR_INTO_TRAFFIC:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:Calculation_4446038045004603392:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LOADING:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:UNKNOWN:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:IMPROPER_LOADING:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:UNKNOWN:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:DRIVERLESS_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OTHER:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:DRIVERLESS_VEHICLE:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[sum:OTHER:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Fatalities by intersection,Map,Violation type' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Fatalities by intersection,Map,Violation per year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Fatalities by intersection'>
      <table>
        <view>
          <datasources>
            <datasource caption='Intersection_Collision_Summary__2010_-_2011_' name='federated.15ryj38172hj8v0zpnpa715924ay' />
          </datasources>
          <datasource-dependencies datasource='federated.15ryj38172hj8v0zpnpa715924ay'>
            <column caption='Fatalities' datatype='integer' name='[FATALITIES]' role='measure' type='quantitative' />
            <column caption='Intersection Name' datatype='string' name='[INTERSECTION_NAME]' role='dimension' type='nominal' />
            <column caption='Major Injuries' datatype='integer' name='[MAJOR_INJURIES]' role='measure' type='quantitative' />
            <column caption='Minor Injuries' datatype='integer' name='[MINOR_INJURIES]' role='measure' type='quantitative' />
            <column caption='Total Collisions' datatype='integer' name='[TOTAL_COLLISIONS]' role='measure' type='quantitative' />
            <column-instance column='[FATALITIES]' derivation='Avg' name='[avg:FATALITIES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAJOR_INJURIES]' derivation='Avg' name='[avg:MAJOR_INJURIES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MINOR_INJURIES]' derivation='Avg' name='[avg:MINOR_INJURIES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_COLLISIONS]' derivation='Avg' name='[avg:TOTAL_COLLISIONS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[INTERSECTION_NAME]' derivation='None' name='[none:INTERSECTION_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FATALITIES:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MAJOR_INJURIES:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MINOR_INJURIES:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FATALITIES:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MAJOR_INJURIES:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MINOR_INJURIES:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.15ryj38172hj8v0zpnpa715924ay].[sum:TOTAL_COLLISIONS:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MINOR_INJURIES:qk]' value='N' />
            <format attr='text-format' field='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:MAJOR_INJURIES:qk]' value='N' />
            <format attr='text-format' field='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FATALITIES:qk]' value='N' />
            <format attr='text-format' field='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]' value='284' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15ryj38172hj8v0zpnpa715924ay].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</rows>
        <cols>[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Intersection_Collision_Summary__2010_-_2011_' name='federated.15ryj38172hj8v0zpnpa715924ay' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15ryj38172hj8v0zpnpa715924ay'>
            <column caption='Injuries or fatalities' datatype='integer' name='[Calculation_4446038045004603392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[MINOR_INJURIES]+[MAJOR_INJURIES]+[FATALITIES]' />
            </column>
            <column caption='Fatalities' datatype='integer' name='[FATALITIES]' role='measure' type='quantitative' />
            <column caption='Intersection Name' datatype='string' name='[INTERSECTION_NAME]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Major Injuries' datatype='integer' name='[MAJOR_INJURIES]' role='measure' type='quantitative' />
            <column caption='Minor Injuries' datatype='integer' name='[MINOR_INJURIES]' role='measure' type='quantitative' />
            <column caption='Total Collisions' datatype='integer' name='[TOTAL_COLLISIONS]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4446038045004603392]' derivation='Avg' name='[avg:Calculation_4446038045004603392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_COLLISIONS]' derivation='Avg' name='[avg:TOTAL_COLLISIONS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[INTERSECTION_NAME]' derivation='None' name='[none:INTERSECTION_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5cecf</color>
                <color>#daaeaf</color>
                <color>#cf9192</color>
                <color>#c47576</color>
                <color>#b95c5d</color>
                <color>#ad4547</color>
                <color>#a23032</color>
                <color>#971e20</color>
                <color>#8c0e0f</color>
                <color>#810002</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]' />
              <size column='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]' />
              <lod column='[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LATITUDE:qk]</rows>
        <cols>[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Violation per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Intersection_Collision_Summary__2010_-_2011_' name='federated.15ryj38172hj8v0zpnpa715924ay' />
          </datasources>
          <datasource-dependencies datasource='federated.15ryj38172hj8v0zpnpa715924ay'>
            <column caption='Fatalities' datatype='integer' name='[FATALITIES]' role='measure' type='quantitative' />
            <column caption='Intersection Name' datatype='string' name='[INTERSECTION_NAME]' role='dimension' type='nominal' />
            <column caption='Major Injuries' datatype='integer' name='[MAJOR_INJURIES]' role='measure' type='quantitative' />
            <column caption='Minor Injuries' datatype='integer' name='[MINOR_INJURIES]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[INTERSECTION_NAME]' derivation='None' name='[none:INTERSECTION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FATALITIES]' derivation='Sum' name='[sum:FATALITIES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MAJOR_INJURIES]' derivation='Sum' name='[sum:MAJOR_INJURIES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MINOR_INJURIES]' derivation='Sum' name='[sum:MINOR_INJURIES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ryj38172hj8v0zpnpa715924ay].[Action (Intersection Name)]'>
            <groupfilter function='empty-level' member='[INTERSECTION_NAME]' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15ryj38172hj8v0zpnpa715924ay].[Action (Intersection Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15ryj38172hj8v0zpnpa715924ay].[sum:MAJOR_INJURIES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15ryj38172hj8v0zpnpa715924ay].[sum:FATALITIES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15ryj38172hj8v0zpnpa715924ay].[sum:MINOR_INJURIES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ryj38172hj8v0zpnpa715924ay].[none:YEAR:ok]</rows>
        <cols>([federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk] * ([federated.15ryj38172hj8v0zpnpa715924ay].[sum:MINOR_INJURIES:qk] + ([federated.15ryj38172hj8v0zpnpa715924ay].[sum:MAJOR_INJURIES:qk] + [federated.15ryj38172hj8v0zpnpa715924ay].[sum:FATALITIES:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='Violation type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Intersection_Collision_Summary__2010_-_2011_' name='federated.15ryj38172hj8v0zpnpa715924ay' />
          </datasources>
          <datasource-dependencies datasource='federated.15ryj38172hj8v0zpnpa715924ay'>
            <column caption='Animal Action' datatype='integer' name='[ANIMAL_ACTION]' role='measure' type='quantitative' />
            <column caption='Backed Unsafely' datatype='integer' name='[BACKED_UNSAFELY]' role='measure' type='quantitative' />
            <column caption='Cyclst Error/Violation' datatype='integer' name='[CYCLST_ERROR/VIOLATION]' role='measure' type='quantitative' />
            <column caption='Driverless Vehicle' datatype='integer' name='[DRIVERLESS_VEHICLE]' role='measure' type='quantitative' />
            <column caption='Failed To Observe Traffic Signal' datatype='integer' name='[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]' role='measure' type='quantitative' />
            <column caption='Failed To Yield Right Of Way(No Control)' datatype='integer' name='[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]' role='measure' type='quantitative' />
            <column caption='Failed To Yield To Cyclist' datatype='integer' name='[FAILED_TO_YIELD_TO_CYCLIST]' role='measure' type='quantitative' />
            <column caption='Failed To Yield To Pedestrian' datatype='integer' name='[FAILED_TO_YIELD_TO_PEDESTRIAN]' role='measure' type='quantitative' />
            <column caption='Followed Too Closely' datatype='integer' name='[FOLLOWED_TOO_CLOSELY]' role='measure' type='quantitative' />
            <column caption='Improper Lane Change' datatype='integer' name='[IMPROPER_LANE_CHANGE]' role='measure' type='quantitative' />
            <column caption='Improper Loading' datatype='integer' name='[IMPROPER_LOADING]' role='measure' type='quantitative' />
            <column caption='Improper Passing' datatype='integer' name='[IMPROPER_PASSING]' role='measure' type='quantitative' />
            <column caption='Improper Turn' datatype='integer' name='[IMPROPER_TURN]' role='measure' type='quantitative' />
            <column caption='Inanimate Object Action' datatype='integer' name='[INANIMATE_OBJECT_ACTION]' role='measure' type='quantitative' />
            <column caption='Intersection Name' datatype='string' name='[INTERSECTION_NAME]' role='dimension' type='nominal' />
            <column caption='Left Of Centre' datatype='integer' name='[LEFT_OF_CENTRE]' role='measure' type='quantitative' />
            <column caption='Left Turn Across Path' datatype='integer' name='[LEFT_TURN_ACROSS_PATH]' role='measure' type='quantitative' />
            <column caption='One Way Violation' datatype='integer' name='[ONE_WAY_VIOLATION]' role='measure' type='quantitative' />
            <column caption='Opened Door Into Traffic' datatype='integer' name='[OPENED_DOOR_INTO_TRAFFIC]' role='measure' type='quantitative' />
            <column caption='Other' datatype='integer' name='[OTHER]' role='measure' type='quantitative' />
            <column caption='Oversize Vehicle' datatype='integer' name='[OVERSIZE_VEHICLE]' role='measure' type='quantitative' />
            <column caption='Pedestrian Error/Violation' datatype='integer' name='[PEDESTRIAN_ERROR/VIOLATION]' role='measure' type='quantitative' />
            <column caption='Ran Off Road' datatype='integer' name='[RAN_OFF_ROAD]' role='measure' type='quantitative' />
            <column caption='Signed Forced Turn Violation' datatype='integer' name='[SIGNED_FORCED_TURN_VIOLATION]' role='measure' type='quantitative' />
            <column caption='Stop Sign Violation' datatype='integer' name='[STOP_SIGN_VIOLATION]' role='measure' type='quantitative' />
            <column caption='Struck Parked Vehicle' datatype='integer' name='[STRUCK_PARKED_VEHICLE]' role='measure' type='quantitative' />
            <column caption='Unknown' datatype='integer' name='[UNKNOWN]' role='measure' type='quantitative' />
            <column caption='Yield Sign Violation' datatype='integer' name='[YIELD_SIGN_VIOLATION]' role='measure' type='quantitative' />
            <column-instance column='[ANIMAL_ACTION]' derivation='Avg' name='[avg:ANIMAL_ACTION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BACKED_UNSAFELY]' derivation='Avg' name='[avg:BACKED_UNSAFELY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CYCLST_ERROR/VIOLATION]' derivation='Avg' name='[avg:CYCLST_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DRIVERLESS_VEHICLE]' derivation='Avg' name='[avg:DRIVERLESS_VEHICLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FAILED_TO_OBSERVE_TRAFFIC_SIGNAL]' derivation='Avg' name='[avg:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL)]' derivation='Avg' name='[avg:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]' pivot='key' type='quantitative' />
            <column-instance column='[FAILED_TO_YIELD_TO_CYCLIST]' derivation='Avg' name='[avg:FAILED_TO_YIELD_TO_CYCLIST:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FAILED_TO_YIELD_TO_PEDESTRIAN]' derivation='Avg' name='[avg:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FOLLOWED_TOO_CLOSELY]' derivation='Avg' name='[avg:FOLLOWED_TOO_CLOSELY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMPROPER_LANE_CHANGE]' derivation='Avg' name='[avg:IMPROPER_LANE_CHANGE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMPROPER_LOADING]' derivation='Avg' name='[avg:IMPROPER_LOADING:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMPROPER_PASSING]' derivation='Avg' name='[avg:IMPROPER_PASSING:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMPROPER_TURN]' derivation='Avg' name='[avg:IMPROPER_TURN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[INANIMATE_OBJECT_ACTION]' derivation='Avg' name='[avg:INANIMATE_OBJECT_ACTION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LEFT_OF_CENTRE]' derivation='Avg' name='[avg:LEFT_OF_CENTRE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LEFT_TURN_ACROSS_PATH]' derivation='Avg' name='[avg:LEFT_TURN_ACROSS_PATH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ONE_WAY_VIOLATION]' derivation='Avg' name='[avg:ONE_WAY_VIOLATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OPENED_DOOR_INTO_TRAFFIC]' derivation='Avg' name='[avg:OPENED_DOOR_INTO_TRAFFIC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OTHER]' derivation='Avg' name='[avg:OTHER:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OVERSIZE_VEHICLE]' derivation='Avg' name='[avg:OVERSIZE_VEHICLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEDESTRIAN_ERROR/VIOLATION]' derivation='Avg' name='[avg:PEDESTRIAN_ERROR/VIOLATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RAN_OFF_ROAD]' derivation='Avg' name='[avg:RAN_OFF_ROAD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SIGNED_FORCED_TURN_VIOLATION]' derivation='Avg' name='[avg:SIGNED_FORCED_TURN_VIOLATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STOP_SIGN_VIOLATION]' derivation='Avg' name='[avg:STOP_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STRUCK_PARKED_VEHICLE]' derivation='Avg' name='[avg:STRUCK_PARKED_VEHICLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UNKNOWN]' derivation='Avg' name='[avg:UNKNOWN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YIELD_SIGN_VIOLATION]' derivation='Avg' name='[avg:YIELD_SIGN_VIOLATION:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FOLLOWED_TOO_CLOSELY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LANE_CHANGE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_TURN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:RAN_OFF_ROAD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STRUCK_PARKED_VEHICLE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:BACKED_UNSAFELY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_CYCLIST:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_OF_CENTRE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_TURN_ACROSS_PATH:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ANIMAL_ACTION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STOP_SIGN_VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OTHER:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:PEDESTRIAN_ERROR/VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_PASSING:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LOADING:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:DRIVERLESS_VEHICLE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:SIGNED_FORCED_TURN_VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:CYCLST_ERROR/VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OVERSIZE_VEHICLE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:UNKNOWN:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ONE_WAY_VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:YIELD_SIGN_VIOLATION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:INANIMATE_OBJECT_ACTION:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OPENED_DOOR_INTO_TRAFFIC:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_OBSERVE_TRAFFIC_SIGNAL:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FOLLOWED_TOO_CLOSELY:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LANE_CHANGE:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_TURN:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:RAN_OFF_ROAD:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STRUCK_PARKED_VEHICLE:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:BACKED_UNSAFELY:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_CYCLIST:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_RIGHT_OF_WAY(NO_CONTROL):qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_OF_CENTRE:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:LEFT_TURN_ACROSS_PATH:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ANIMAL_ACTION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:STOP_SIGN_VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OTHER:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:PEDESTRIAN_ERROR/VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_PASSING:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:FAILED_TO_YIELD_TO_PEDESTRIAN:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:IMPROPER_LOADING:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:DRIVERLESS_VEHICLE:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:SIGNED_FORCED_TURN_VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:CYCLST_ERROR/VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OVERSIZE_VEHICLE:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:UNKNOWN:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:ONE_WAY_VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:YIELD_SIGN_VIOLATION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:INANIMATE_OBJECT_ACTION:qk]&quot;</bucket>
              <bucket>&quot;[federated.15ryj38172hj8v0zpnpa715924ay].[avg:OPENED_DOOR_INTO_TRAFFIC:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.15ryj38172hj8v0zpnpa715924ay].[Action (Intersection Name)]'>
            <groupfilter function='level-members' level='[INTERSECTION_NAME]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]</column>
            <column>[federated.15ryj38172hj8v0zpnpa715924ay].[Action (Intersection Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='200' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]' value='236' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]' />
              <size column='[federated.15ryj38172hj8v0zpnpa715924ay].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='10' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='7' type='layout-basic' w='98400' x='800' y='6250' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37875' id='1' name='Fatalities by intersection' w='55500' x='44200' y='57375' />
        <zone h='47000' id='2' name='Map' w='53400' x='44900' y='1000' />
        <zone h='8250' id='3' name='Map' pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]' type='size' w='36600' x='45600' y='48125' />
        <zone h='7375' id='4' name='Map' pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]' type='color' w='15500' x='83000' y='48375' />
        <zone h='71000' id='5' name='Violation type' w='43700' x='0' y='1375' />
        <zone h='33000' id='11' name='Violation per year' w='43900' x='-100' y='72375' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Overview'>
      <viewpoints>
        <viewpoint name='Fatalities by intersection' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]</field>
            </color-one-way>
          </highlight>
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Violation per year' />
        <viewpoint name='Violation type'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='2' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:TOTAL_COLLISIONS:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[avg:Calculation_4446038045004603392:qk]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:LATITUDE:qk]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:LONGITUDE:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Fatalities by intersection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Violation type'>
      <cards>
        <edge name='left'>
          <strip size='218'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[Multiple Values]' type='size' />
            <card pane-specification-id='0' param='[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[:Measure Names]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:Calculation_4446038045013798914:qk]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Violation per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:INTERSECTION_NAME:nk]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:YEAR:ok]</field>
            <field>[federated.15ryj38172hj8v0zpnpa715924ay].[none:YEAR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fatalities by intersection' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nLS9abBsyXGY91Wdrdd7+25vnRXzMINtQOwECHABuCgshymKkCmHwqEIy3Io
      9N/0b8lW2JK3CIUdoXB4+2NbsgnStBwWFwGisBAUBgKxDgkMBrO/9+7y7trbWav843SdW11d
      p+8dgsoXL2736TpVWVlZmVlZWVlif39fSykB0FoDIITguuC+c506JpMJw+EQrTVCiOad67b3
      dvC7DiilgEuc2+r/N9H2nxUuLi4YDodr8Xm7tIW6j1LKt/2eeVcIgVKqqcfGr41+1+GZqqqY
      z+cMBgNv+T/r2IRSSoIg8CLiEsHXgGEedxK1lddao5RqiGwQv4r5zLuGsKZt+9114L5r99Ud
      qHXv2329Tt/dSf7jTiCbyQxIKVFKNePY9h5AWZYEQdDg7P5ucHy7DGXG1NQlpVxpwwV3gvom
      rMEhCALOzs7Y3Nx82zznw9WUDX2N2XCVJHClhTsrzTND0DzPieO4tU3D1G34+JjpugRwB/Y6
      Gsiuz520vslk4+/SwYer1pqiKoiC6Eoc7cluM71b3q6nqqrlAQ/DFRq6OPn64IItUGzcXFra
      E8PFz9dfu4wtsIQQxHFMnudEUbTUho/e6ybx0pi6P1ZVtTLI9my2K72u1LZhNpvR6/Wa99w6
      7A4bbdEG7vtXMb9b3h4Y+3e7nG/AfINlwNUmbn3uO0IIoiBq7av7zHyP45g0TRtpbgsiM35l
      WTaME8fxEvPbDGvjWFXVWlq6bfgmn00zVysZXF0aVVXVfDZl2iyTq/C7Smjb9SxpgHUz2X75
      7diHLoMbApv27Lbb3nVxtCWDi/vbAduksaWGbb/+WWzh67Trm3xmEtiM6TMjyrIkjmPOz89X
      6l0dv3bTxm7Lbu86WnSdeePSzmiVtjEzmsmsHdwyBlfT9zAMm3rX4bjO9DS4hHYj9sv2c5eJ
      /7wWgy7D2eCbHG2ENGCvLWx8XWgjsv3Ounba6vOZD77JbswX1zQQQlAUxcoA2/Q2zKWUaqSm
      Xa87dmk5pyv7aHVJ46qqKFROIAKiMPZq9bb++xirzYRxJ6PN8EopZrMZRVGQpillWaKUWtJ4
      babkdXjvuvwZ+uwtuzEbcbtyezHWppKu88xnbti4uMzqW+jZ77etD1xm8j13mbStDza4Utc1
      FV36+Ox7047L6G77tqS2zQN3bAwjBUFAN+gjECBAoxEsJK4MkcLfx3USvk0Ymr/GhHbNTfN5
      PB4znU5J0xSAMAzpdDr0ej2iKGrV+gDT6ZQoiojjeKXf6/h1naUR+ghgnrnM8m8S2hYuZkDt
      7753fZ/XqUD3mW0OvR3wSXi7Tvv3Ng3lMn6b9HVNpSiKKIpiyalgyoVh2DCyUgqNIi9zIhET
      BAGBCNeaudcBdw0A7QLq4uKCk5MTtNb0+31u3rxJr9dbsgJsWvisjDzP6fV6S337cUBrTdgm
      ga4CV1K1NWDX6zOv7LrW1WF/d99zVa777CowxGzTID417pZZ9775fpWZZ8oURdGKv20TB0HQ
      2MQ+J4VNJ0FAJ+w236uqWpmM7oRoM298wlFrTVEUjcBKkgSo93xOTk4AGI1GbG5uLk1iXx9t
      UFotaSpXu7SBK3xcHjS/rawBXAKsQ3DdbL0K3Bl8lbT2dcyAz/Z1J7br3XDxvm4f7PcNE/na
      dcu39cVdMLYNsM34RVkQhRHdbpfJZNJ41Uw5t17bLDLPbfepi3uapiRJ4p3QBgfTb3tdYTQP
      1N6+k5MTqqpiY2OD0Wi0JCSuGi8DlaqoKAlltPJumzWwjl/dthoT6N+kmdMmXdoQbpM69nvr
      2jADbtvRPu9Gm9ni4ufD2W7THTyfGedrx1felo62xDLSVQjBXI2JxDZhGHrd1j4w/XelogtF
      mVNWJQnJWr5waWBwSdOUk5MT8jxnc3OzYXy3Tbvusiybeu2FfRAEzKsJ/Xhj6bfrCirf2K3V
      AG0v+dSd7Tq06/Ah0MYMbWrKrcf32QYXZ9e0cD/bxHCZcB3zun10NwFdKW6bGb4BaGvP2PaG
      qYy9b2Az2AG9PNGNOeFOnFV6KLRedVUCVKoEQf3fQy+33+a5lJL5fM7x8TF5njMcDrl9+3Zj
      ovlMPRtsYZUklxMvzefoEgouTSsfj7aZrb4yLi4rE2Adk9lSxh1Ul/C2O3Adk7iE9cFVM95t
      x94hdZnN1y+7bReHNuntExRuP9YJBfO7TyvleQ7UEs9sdJk+Vapikp+jUWwm20gpmw0vn4S3
      xzarUsoqpxsOvJOz0lXtLkUuja2PHqYtI/GzLGMwGLC3t0ccx0vxQC5tbNyUUoRhuLJ4Lqqc
      MAxJogQQSzxm09Kmp4/nfALXfhZqrRtmcQftOhLXJY7PPPDV42M02369Clxzx+64IeY6xnfx
      bTPRroOHj8gGj7Isl6T3OnNOKdUsau0xsctqralUgUJRqpJOp0OapnS73SXNbNv7pu68SunI
      rtdTo7UmDhK01KRl2to/g0ue5xwfHzdt3717t9mdtrWSb5PRwLq1WxTEV9LLp0nbeK7t2ZIG
      cN10LmI+ZrIbtFf1NjKuW88tZyPkA99sdm38tneuC1dpwetMojZ8farZ98ydLF7NJgO60RCl
      K0IZEYbV0vrAbd/W2oNoE41fC7aZgi7ORVFwcnLCdDql0+lw584dkiRp1iLGi2WbMlfRy9XY
      dlm7vD2hfTjbYIL+bAFg12kgdB+0SUR3UNp+c9Wure5cNe2ry2cm2DaubXdehZMrDdoY2zDI
      un776rOfu59tVV+WZWt0pD1AbZPPfZaEXe6fnhJuVHS7XcbjMRsbG1f2uVAZ82LKINkkEOFK
      /T4pbZ77GL/T6TTaxrQdhmGzyeWTuC7DupPWLtfWfx/93X4XRbGkRdt4ILQrcWd8W2Pub9cx
      m3ztXNXJ6/7u0xA+s8T32cB1Qqt90mddGaCJcbHL+9q3Y1zWtZ+XJfdPT9nq94kXpoyxt13N
      69ImChLyKqVSFUEQWuU0cLmT7ZoSJycnnJ+fE8cxt2/f9jK+zWBt4Sht/fdZFyvjoDXDIECk
      KWI4bN0c9fGwbRq67TYm0FUzxW3Ajj9fh7xt069jsLYwaB/jmPLr8LR/s/vXZur4BsX33a7P
      ZTpfm81OrF4N77DjeezNLB9orcnLkv3zc3YGA4adTvObCRM2m0+t9EMwSEZo5U6W5RAYwyzT
      6ZSTkxOEENy8eZNut9uUaTNv3Hrqz2oxxVbDRdxoV6+WLksOP/8Fpq+/jggCtj74AbY+/GE0
      /vGxv7dZOFDTP3RfWAf2y+sCpezvrsRfJxnctcI6nK7TvsuMroT02Y4+qe6b3FepZftZFEXk
      ed5oA1vbtMW/2FApxcl0ysV8zna/v8T8Wms2NjY4PT3lxo0ba7USLJiQS2FgaG6Y3tD14OCA
      qqrY3t5uTmHZk9pHC5fGBpeL7IxKlYy6u2s1eRsdzr/7XSavvFK3UVUcv/B1uo89RnLz5pUC
      yp7QPp57WxPARdytbB0TXFX/VeaHC+46A5YnRZuJdZVJ12Y+uOV97fs+m79RFDGfz+l0OkuL
      s6sgLQoOzs/pJQlP7e4irX4YzWK0x3w+X8QFaaS83Om1d8GVrjDmTqUrAnnpEVJKcXx8zGw2
      Y2trqzl9ZbxTpj6zceUzQ41b1rhwhRAkoosONGVRejWHGTelFEVRUKkFvtQ7y/nxyTJRtCY/
      PYXRaGWcDbgbhLa1YuPbGgy3Tr0Z4huitk0GV/LaZV270deuKeO603z1u227dfg0g4/h3brs
      d1wJ6Kpvlxnc9zudTuPpcfvmgtaaaZbx8PycO6MRvTj2mpoG39FoxPHxMds720054+s3dn2l
      K/JyTiy7KF0xzs4YdXebyXNwcEAURdy5c2elf3Y9vjPUPtpHUbS0idemcYuioCzL5pxDLGKU
      Vs3k7D/5BOOXXrrsdxTRvX2bcGHy2ZPPaDXjiXLbcttfu+pyGcL+3hY6bcNV0r/N3vbZ1m24
      tU04F4e2OtokdttCzmdC+WxfMxC2z11KSRiGFEXRMIUPP6U1J5MJp7MZNzc26FsD2dY3KSWj
      0YiT4xN2d3dXBQ6aWTam1AVx0kUgGSYjhBCcn59zcnLCxsYG29vbS2sTmx6uXe3TsC5tXWFp
      fjM4AZRVSaADojiqGV8YD5pCaU3/3j12JxPOXnwRGUXsfvwThJubV/KdD9wxFYeHh9q1u31S
      2P1svvuiIE0Z39nSk5MTdnZ2ln5vU6U+Jjfg23Pw4e8jjlvvVXCdCWwHxpnffDayATMJbI0C
      MM0yDi4uSMKQG8MhkeVFsvHIqwytFXHQWerTdDolz3NGo9EqU6Ipq4IoiJt2j46OmEwm7O3t
      MRgM6g2zxblbn4R36ejrp4lmdSW/TYe0nCGoN9TCIILgcgd6lk+Qso5eVUoRyog4SlaEsU8T
      GVplWdYE9Nm85PJcaCPoDqr92zpbuY1JXWbx7f665W2fv4tbWznbjGjbLvdpmbZ+rpMgLv5m
      IHzuQ19d5nkQBEueG6iZ//7pKXe2tugvYvzb3LNKV0yyczY7u82Beq013W6Xoig4Pz9vQo+b
      thHNDqsQgsPDQ6bTKbdu3SJJksYMMczv0za2sLukraGntVFFvcaQYjUIUQhBJ+zVWiaQxAvz
      TgjBrJhQ6pKI2m2LrMf64qUf8qN//I+JBkOe/Zt/g2hjY60JafADSItZvWkYrDocQlif5sOe
      PW3qt01LuIzgI4SL8Dqp74LtjbC9GXZdppxrXrlgS/F1k90HbcJCozmfTUiLCkQOaPYGu0hR
      42m8Q1EUMU5TDi4uuLu15TV53LqjIAYBRZUSymVLdnNzk9PTU05OTtje3vbifnh4yGw24/bt
      2yRJQp7nCCFWDtf4wKZREARk5Zy8yhjEm02ZWTFGlRXDZEQoIq9G11p79z7iIKknDgIha775
      0T/5J5x//wcADJ58gic/+6tN+z6eM/+VrpgU54CgG/bpx8OltpY2wq7aDV3HPG2pNOxOt0lf
      ux7z12VY3zs+G9RnvvnK+Uw937qmrU9uGyvqGc2D0xMu0gzjdZFC043GbHQ2m/fCMCTLcx6e
      n3N3NKIThSvteDUlcnFQZNUFCTAYDEjTlMPDQ27cuLH0/v7+PlmWcefOHaIoIssyosjPpG19
      toXjvJjSifr14RXqbA69uI9GEcn2CWUC4Uw9laqIZYdYJkgRLAmfeHjJuJH1eRXPOtrVgEDS
      C4coXZtSLnjdoFdJ6utCW51t2mJdm2126FVtuuuT6+J9lRbyTXq7P/tnp1zMM7AnHIL7pxOi
      3Q69+NKX/2g6ZbfXo7+wWa/XP8FGsr0S0mBMMq3r/YEoijg4OGBvbw8pJQ8fPqQsS+7evYuU
      ssnTZLflW8+0jZUQgm40QOmSi+yYDTHk9IWvk5+esfGu5+g+91wTfeS+HwRB4yhIy1m9Nqhm
      RDJmmIzqtqnbfvZv/AcMnniScNDnzs9/xjdsNe66QmlFFMWNmdyN+uRlVgf7OULlWocqfdLb
      BVvtrIO3O5nsxc7bfc+H61WmkHmv7X0XfJNZac35LG2Y34ZKwdH4rKm70pppnrPZ6zVhzdcF
      w/yuBrKTj3W7XXZ2djg6OuLBgwcopbhz505jerh7EkIsHx4y/bIP1JhnxtceyZhARiRhj/Nv
      fYfpK69SnJ5y/LUXyBfngH20bA72o8lVRhwmC41RL9bLqmCSnTEtLshOT9ECVFVRjMdL+Nr4
      R0FMXEL+1n2y+w8QuvYmzcsJWq/y0VIoxLrjfT5V78JVZoPvQMN13/eV9a097PWAW59vzWGe
      +0wiW8q779pxMG59UE+CNgmeFgXj7IxeNEBpCIRoQqerqmqY08avzYyzoaoqyrJsIjENmLrL
      suTGjRtN/XZbdh2+iGAff9hrsEjEJGGHWXoZSo1SVFmGLoqlTbumf0XBwe/9PrP7D7j5mZ9l
      /qQgqzJiGaOp+UWhyb71fb7zX/43lLMZAK/+1m/x0b/3n5E4O98Gx+zgkGo+pwJkp4Pa6BGK
      aGEaOd5G88U1F9xB8/3uStGrFopVVS35v9vseVfiuwPitmcklIuTuyCy22mbiC5ztTGxzy++
      DO3aIy8FBxdTHpzvs3/xiO5CWhuTYB24Gspd7Lu4KKW4f/8+Ukoee+wxxuNxc+DG1z/36Ghj
      Klhj4Ou7ERYb730PslMv4ruPPUZnMeE6nQ6dRQiHiRZ985/+v7z2G5/j8Ktf5U//239IeFHQ
      iwb04w1CGZFEHTajES//b/+4YX6A2YOHvPpbv924bNM0Jc/zxv0qbLd+IJEEJEGv2d+w/y/t
      BDcq3GPb+ohl/7bOXDC/mey+15HwtuR1vVNN5yyb1/x+lc3vDq6tldwYF1uT2BLfPayy2r4i
      DgXFct6qpXazArJCoHXF1iDlIjtBIBFaEuloZQ3ibu23OQDsMwVlWfLgwQPiOObmzZsA7O7u
      cnJywmAwIAgCxtlpU48UIb1oNfvyukhZVwjGe3s89tnPUs1mRJub1M7RS4iiqKHf+EevNM/L
      2Yzs8IjO8BnysgCKurwQpIeHK+1O33wDKWVj6tk4JHduI09PEWFIuLnZqo211suH4l3VZsM6
      ors2o1vO/GanRXSJZxPb7ZCP+C4+Ns5XnSizzSU7CMxnTvlMP3cd4WoXKSRJGFFUpaf1ZRAC
      wkCRV1n9LpKq6nuT2LqmkaGXT2rnec7+/j5JknDr1q1mEgdBwM7ODicnJ0RRRBnlzbtSV4h4
      6DXrfA6ISX5OKCM6YZ2VotIVEkEFiH5/JVqzaWcxPrd++lNcvPQSqigYPPUkG+94B3KhJRre
      0JrRu9/N4de+ttT+9vPPrxyvbHALAsRoVAcfOgLRxcfrBWqzna+SqOa7e0TRDIjrbVhXn/1+
      pUuKsiCQAVLIJc+HIajLjG1gS1DXPPLhYjOAz+SzhYeNexIGjNPiSnyk0ATWJprSCqWXhYDL
      fKY9X5pzKSVpmnJwcEC32+XmzZveg/Lb29scHx/TCboM+kNs29jtt29MtNbEQYdAhBRV7eod
      52cEIqAfXu4H+OhjYPcTH6dz6ybp4RFb73sfwopybcoKwbv+o79J+ugR49dfRwjB7gc/wJN/
      6ZepVK0VA7l8/ltrvbK+sftQVBmlKulG/ToUwk6z55uxbdCmEdwyZlCqqlrKYXOVSaV0xayY
      kFcpSl8OYhx06AUDgiBcGazrnCc2Zdva94Vl+9Y+vj4LIZhkE948PqNUVy/ou4lms3cZLySQ
      bETb3nPEbQtT24SbzWYcHBwwGAzY3d1dasvul9aaLMuYTCaL1IRdMMKL1bxB9gTKyhSlKypV
      NuMhhWSaj+vJL3pN3JNNU99ZZHOc07d+WRqXsmT86mvIMGT49FOUquQ8PaHSJbu92yv9NIF1
      Pstllo9RaAbxxmownIvAOnu6DVy7fd36wNdWUeXMyylFlTUBU3b7RZVxWqZEMiIKYgIRU1YL
      W1VKBBBISWfN+Vrz2R5gU87nA3cnVlalVKogEBGhDJnk50RBQi/qk1d5w/xtEw1AoOnF9W+d
      sEc/qo812qHHJqzYlXAuswhRxwEdHBywubnJ9va2V2O5ZqNZE2TlHB1XaKUYJBt0ZH+FdgaM
      P12EdX2FyomCmH68gRRyKc/POrPaHoN1FgiACEOq3R16wyFq8XsSdhZlNVgbgsbr1QahjJgV
      E8bZWfsFGT4V6ELrbHXe8anRtveycs60uGgSudYZweoMCAb5UEbkVUqhck6mKfMMlDPHpBD0
      4phRt8tGr0dgtd92RPGqftlQVBlZNa8nh5AorRYZl0MGcZ84nFFUiiSGLPcLls1eQDeKFhNn
      0ODm2t02k7jxT6beyWTCo0eP2NraYmtry+umdesyNNje3q7zdmYamYAUy7Hz9rvu81oDmCxy
      CqQkDALE2xScbWZXW/uBCJuEWVeN48oEDjsUKmdWTN5eOLRbsa+cC+6uYlsbTR2itoPRIANJ
      qYqlNktVUKpFoiQNs1SDkLjNa2Ca50yzjEprdq3tc3sx5jtbepXWE6KOrTfllLXBMi8mJGGX
      O1tD5kVKUZXkucJIKFN/FAhub+4RyNWNKPu7MRvcLAd2eRPOvL29Tb/fbya4Ocxix0i1aYSt
      rS3Ozs4IqoA46OCCa2bagsTUqXSFnBVMX34ZVVb0n3qScHvbS8M2aOM5F3dXqNoa0k0b7xPI
      nbBPXmXtO8HuAs9+dh3kffX43rXrrP8uPkuxtBh0F2BNm63YNA1wno4pVbHSj7aFsOtZ8OJt
      lYXFwXRgWmQcjM94eHrB4XnOyVihWX4/kJq9jWSF+X00sXHJsqzx4Zt2z87OOD4+Znd3d+n+
      LMOc9qRpM0VNe1tbW6TztHUcDfPbZmGp6h1bjSYKYuZv3ae4GFNOxsxef6PRBG3gm/w+nlOz
      GdGjR+RvvglluVLO7p9LO19fAhmwkWy3a4Dr2mYGjIvTbfA6AVamnaLKSYv5Ono15bXWVEqz
      Ivo9MM8Vb50e8tjWDUKxui7w1Q+0LtyAlfiWrBRczMxxQxBNRmPnPa3Z6AvCYNXlatq08TB0
      jaKoOVOcpimdTofT01POz8+bA+vuuy7dr2OObG9vkx4eMvvRKxBIRu9+d+1Lt/ZEbM2XlXOS
      sAu6doMKKUkPDlBFgb519drPuHt9tFg85ORrL/Dw859HZbWrOBpt8sRnP0vniSdW3rtcr2nS
      ckpZVUgp6IT95oSZ6Usgg8v06D5YZ/a44DJKm7RxVZfSFfNiTlrMKHXhXbjZ9S2HOEAkNVIq
      ykoQyPqZ0lBWtnITTFPNLJ+y0Rmt4GHX7zM/fJPXpcY0VZgtn3WkCgNNHAbNRRWuJHPxsukq
      RL1A73a7HB0dMZ1OuXnzJv1+fymEwTZTbFPlOjD53ou88du/TbIxRAQhR1/5Co//6q/Sf/rp
      pkyzdyIkg+TyZFYUxJwfHjB5/XW0UqQnJ2y+/3mihRnkjv38rbc4/OKXUHnO7k99gsGzz66Y
      WtMf/Yj7v/M7YE3u4uycN37jc9z7W3+LcGM1MlQAwTxFaIXuh0wXZikEDf5NX9ycMjaxrys5
      1i2WfAtOrTV5lXGRnXI6P2KSn1OofEWC+dShfethKAXbQ8nWIGRvM2B7GNDvtCzMqTWBzxZ2
      F55tms9nGtU4ri7C/XTSjPoBUopGQ9gmlJ1dTWvd2PA2jkEQcHR0xGw2a+J6bLPITBIbd9ck
      sDcbl/pUlrz2uc/R290lHm4Q9Xokww0e/LPfWQSV+Q9BmbqL83NOvvHH6EX91WzGoz/86mo7
      QDWd8uZv/d9MX3+d+cOHvPX//FOyg4OVCXzyjT9eYn4DxcUF45d+4BWQs1df4/iP/hWnf/Q1
      9BuHdMLuSvt1JcVlZrg2b4H72f3d/c0NWzCDGUURWV4zfVnlKFY7tbwWuHzmk45tkzLNNUUp
      PFJYcDyZIcQjNrsDkjBuLl9Yt7ZJyxnzYlZLfHFJ6EpXdtUI1q9HtNaMegHDpN4HCZ04eUOn
      oihWDiSZ/goh2N/fXzrIArUvPc/zZsL4Duv7FpDunQnq0SN0niPta2ylpJrNyM7OoN/HhSU+
      mUxRVpwRQHZa3xGQO8/1o0eUk8nl97Jkfv8+wvJgRVG0FPnpQjGekOf5UpaKOI6Z7+/DYpzS
      /QM2n3qSoiipWBawcjbz3xJpwzo7uS1bg1ufkUplURJE9VE5X72+tUJbriCf7VwpTVa0M3Ol
      4OB8xuFFfR41CjXP7N0hcALptNYUVUVWllykM9IipVLQ7wji0DNJzffWGaAZdiGJ63h3gARN
      h+5Kn42U8q09Dg4OyLKMu3fvLm2UmQhLrVd3QF2whZYJvzb7DMVwiCpLVFEQLCaBVgpVlUS9
      HnJxXsGnHQHY3SHe2iI/uUxjsvHOZ5FSNtnkGm2wu0s46FNOpjVeYUj3zt2VPEm9O3eYvvaa
      ty/d27ebtZHpG0Dn5k2KszPQms7NmwRB2GyaLtEiSdZflN0m5c1vvhW4XY+PoQNZ+72FqM9/
      QnuyLFedrwMpJZVSVGvs3aX6qaMyH56dsd3v13a5ECgFF/M5h+MxpXMhg54rtodtOX2WN2Nq
      nCAJBaNeZxHxWesJjSYU8dr9CFcjHxwcUBTFUiy/3a+VNco1FvhLfdMa2e+z89GPcvrNb9K7
      dQsZBswfHbP3yU/WYcWLd7IyJQ4XWeis1ZCIYx77S7/M4Ze+RH52xsZzz7H90Y8s9akZ116P
      x37lV5o1wN5PfYLk1s0lmggh2P3Exzn93ncpL5Y1weDeMwyeecbbr97TTxFvbQGacDSi0oqs
      mteH64PLVCoalkMhbDDS5O0kcfJFbdqT5+LigsFg0Px+lj6iqHKvVHElvG9R7Wqdybxikl4P
      12XQyIUZU6rlupdKac1oAJ1IruA7yxTjOQihUAqG3ZAbww06YRcp/Q4C2241UCxi5+1t/IcP
      HzYHWa46AG6yTfjo5q6rjAlk7O2yLKGqePTlL3PyzW8hgoDdj/8kOx/7GDJcvlSvqOqNpFF3
      57pEbhekluo0aRvtfuZHRzz8559n8uqryDBk9Pz7uPnpTyO7l7a9Gw5v06EOmzgmlsnSol1r
      vZwWxSeBr9MpF9w1gSG8iQM36vA8O6GospVMDr66fO0sLayB44uKSv14NwdeDZpeAoOOREq7
      n5qzWYnQATc2hmx0hq3a8yowGeQM8wPcuXNnbX32BLAPtvsSHcClQ8H81ph+i5tpzDOTFfrG
      jRtL72s0s3xMLxo2G4pmnE297oF1H85lVTOnFvWZ3Y1keylbXdOP6ZTz734XXVZsPP++xjXb
      Znq7dPCtcQHCdbH2PoTf7oDa6jkIgiZ9n5SycQVKIRFyMbgsJ3PyLYB9OE7mFaUSK+7JHwe0
      1oRma9/IKQ15oTkuFFLUl7hJqREEbPc32R4Mm8RO1wXXhDHJbo+OjgiCgNu3L4O9rhNbZdPK
      zYhhl7HbN3/DMFzKXheGYZ21YjxmuNhNN+udfjzkqm66wtBMlkbDI+hHG8yqC9psTE0AACAA
      SURBVCpdUqlyaQKYchcv/gnp/gEA59/5Ljuf+iS22ekDtz03wE9KSSilXAm2eruwzlvkI4SB
      Oo2GRmmNXEhxe2k5L6fMi8nS+20aIQr+/Jhfa00kJXd3tulEEVEQLg2aWqhtKSRlVaG0JgoC
      Qs9eyJ+FplLWCauiKGoOsvjWU9fpB1ztxrbLuW1orRkOhxweHtLv9x0ttFjTWOaq/bkOYxGg
      NWFwmXXCDV8Pgi5lnpFVtYVQqbLJCtGA04WsmjEv52wmO639U7oO7jOxTT5ahC5B1y18wa9K
      XYK577YhaGZ6wDJDN4FerEp8d1DN9ySSSFGh9I87DTR7wwG7g2HD0K6dGVra0vYgXeUssOtw
      y9gmxP7+fnNwxV0Lue8Zmvg2u2x7v+29tkllM2oQBGxsbHB2dtYk27I9gEubk0D65puoPKf7
      5BOIKMIMiSnjxofZY6nRTPIL+tHGkids4z3vQVcKXVUM3/tuCq2a6Nk2oRAG0Qr9bc0IrF6U
      Df6rkswgtJ1Asgln12feMY22DaYN7ppkiUCeyVU/AymutyHlA601nTDgyd1doiBs6GDwte3k
      q8wxt/8us/nKmjb29/epqoq7d++ilGpS/PnaMHjbNDPQljrSrsc39r4Jp3V9u/tkMkEptZTc
      14yvKT/5wUuMv/99ALJHj9j5xCeaJa6ZLO7utomjMjhsJFuczR8RBCEbSb0vIHo9hh/5cG0e
      ljkdUYfOCBEvCShXkBpN7aOf1tofDLdOKqxjXp/Kva42cMu04bBuURwG7dJgHWit6UQRT+zu
      EVk3p7gTb500boPrlDX1np2dkWUZt2/fbtoxi0pfPTYuvs8urvYzd13glrf/msm/tbXF+fn5
      Co3tsuX4onleTWdoKzLTN3Zaa+bltL6ilUu36rAzIpLxJc2riuLhPunDfSIZIkQdiJeV87V0
      bsPVfF65JrVB3hPGvI751jG2Ky1cBH3M7lPdV3UuiQXzvKVwy/tRINkbbrDV63sD99aZgy7+
      Ln2uM/ENVFXF6ekpN2/eXIrpieOYLMtaN7d8jNy22L3qXahNGKkUuiwRzhnkJEmarBK2h8XW
      jMnNm8zvP6ifBwFCyqX9QZtexuSZl1Ng8XxROhAhockgAhx+8YvM3nwLhGD7wx9i+L730YtW
      Q9zN5xAQVdXUYfe1sUzStP1+ANsMcW1UtzOu1HCRclWta0q0mQVxmKBYbEYt/gELgi0Pdigj
      lCoQwj/g9iAPkri+bTGO2O4PkI7E9DGQPXndhZzbd7dfeVkf3mn6tkj8GogAKetzvQ8fPlwc
      Tew1Et89qto2idzkvDY+vrWVbZra54qLizHf/of/kMOv/2vCbpd3/OVf4d5f/bWlMd7a2qqv
      RjWH153+YrVXzedURUHlESiXOGq6oj5Aj9CgQMtLly6ATFNmi0mF1ox/+DL9d72L0hMjFAQB
      F9/8Jgdf/BIoxd6nPsXWxz5KZY1dQ5vx+HInuM0dahPLbLO/Hclmg7tZ4dqPLkQyJrYSxRqJ
      kZZzNGqJMeKgQyfUXGg7540mkBAHEbvDDZIwpKwqenGyltldMIyyzrRbwlEvL3ZzlZGWl3lt
      pAjIqpRBvIkk4OLigjRNefzxxxthY9x3voPvNtgT5Spwmc8O99ZlyR/+x7/OgZV94Rv/xd9H
      FQWP//SnePj5L1DNZux+/CfZ+uAHUfOF6RHHCBNKcXzMK//7/0Hv1i2ifp+L115DBQF3fukX
      0YZWStX/FxtrSil6ncGloJ3NmLz4HTSawb170Oshez3CXrcOm9CacDAgCMOVswZCCPJHj3jw
      u7/XBNDtf/7z9J98gmRhVs7feIPp66+T7O6x8ew7V9Ojuxsa9sLCPuTcpu59i602KWrsS/c9
      G9z6a+lZX6SwvIusGXTqm0+UjgiFZLM3ACqSsHPJAKE/t47d96X2PAx21W6sT4jYf41WK6qM
      KIg5Pj5mc3OzuVHFuKVdLexOQBtPA652dd9x6zET++yHL3PwwgsrffrR5z4Hx8dUC4bf/4N/
      STQcMliER+uigAWPPPj932d+cMD88JAgjnnqs79K77HHKC8uCEcjiuMTLv7kRXSlGD73HPGt
      2sU7m82aG12yP/0+xWmdq+giTRl97GMQBCAk5azOH8rDh+jFwtntV356thw9qjXZySlZv09w
      dMT+7/xuHa0qBPnpyaUb1GfHurl2fIPgDoBtHvikYZvktNu3j/T5JPUg3uQ8OyGQIZr6+CRA
      LxrQiweNqVS/s5oRuE2DKaWaoDIf2MxlvrvBer5+Gm21VBeCJOoxmUzQWjeH2A24Ho0l29WT
      O8mH57rfjPBRSjGdTpmfni6ZLwbK6bRhfgCUIj06aiYA1KZKVVVM33jTIEs8GjF46ql6DZDn
      UFVMX3+dal77+qevvYYebTJuslL06iS5Vi4llRcUWUopoSoK8vNzAIJOh6IoGE+nS/QSQtC/
      e4doc5NiUTYcDBg8/RThYMD9L36pCdVGa86++73lAzG2FvD5+81vtm3qy0vje9/+K4RoLo/2
      TTwfTsuDWh/E7oYDQFOqkkCGSzja77UFnbkM1BZk1iZNTayU/czQwAafVhRCEIiAs7Oz5pJr
      t02bxibnpy1g1kGbljLvTqdTxuMx8/mc4XDI1rueIx6NyM/OlsqP3vVukt0dskfHNX5hWAeh
      mXD3OCai3r1OdneZL0I3stNTstNTOjs79WI4CAh7XYyBGnTrVImJlQgL6kjOySLwrXv3LiQB
      VZFy8+d+lvsXFyAlt37xF4iShG3LPLaF5dN//a9z/LWvoZVi9yc/RtDvo7UmGgyW+hYNBgS/
      /uu//nfamN0dMJuAWi+H7Lp+Z1OfW9dsNmtyA7VpD/s3m/maz7JOxlrH8ksCGTbJkQyObXX6
      pKbvYPw6LdFW1veO1rrJaySFqK8BQiBliC4FF+cXbG1tLYU32wtye0LYJ9RMn+wdamNT+9YE
      Usomrufo6IiyLOn3+9y6dYt+v0/U6zF8/HH2/9XXqBZHD0fPPccn/vO/x/b7f4IqTYmGQ27/
      wi/Qe/IJRBiiHQ9PZ2eHk29/B10U6Kri9MUXkXHExvveR5rnxNvbBFFMNNqkf+8eODe5a62J
      t7bo3LpF7/HHSW7dJJAhnbDD0Ze/zOzBA2QYsv2RDyM7HUsILGf2k52E3jueZuO5ZwkWvKa1
      pnvrJun+PtVsRjwacesXf2E1MZaBdR4Oe6Bstex6GOzBNM+Pj4/Z2dnx2tvrbHN3+9w1r9x3
      29YoPliX+9IGnyS3f/PRzCzcF19oTtYA44sxp6enPP74497jlzaNsixbukrIZ45prZsb5+0y
      0+mUi4sLiqJgMBg09wakaUocx0t0ne8fcPLi9wh7fXZ/4v1LDHSJ22XQiom6VIu8/OXDQw7/
      8A8pzs8Z3rvH3k/9FCJJ6kBIUWfN7nd7Xq1v+utmEazGY370P/3PzZ7CjZ/+abY//pMNj82L
      Kd2ov0QLmw722FVFgZrPCLtdgqSzfEOMy0BtC6+rvruMaoPJgOz73Z44y2d/17tZAabTaXOh
      s9tp+7PbLzfxVFv9pg6fbe4ypQtNSIc1yYSoIy2DICCO45VUHnb7Nu6+vtl4Gq9RVVVcXFxw
      cXFBEASMRqMmlsc+NebSq3vrJjd2tpvdXgPGIVK/rxfHOi/bTcs5oQzpPvYYT/zary3Rw7QR
      RRFZkTOdz+h1ukv42/yntV7cFrkIlel2Cft9iosLEIJ4d6eZiJr6dJ7Gz3PuuBdVRYoi0DM2
      dLK8BvBJwrbPRt26jNpmw5uOJUlClmV0F7HccJnzpo0B3Dp80tpMAF+MiQ22VHXNOLsPbdB2
      Qq0N7EFJ05Q0TRvmm06nCCE4OjpaqS9JkkaCSSlJkmTJ/PSBFKI2P8oSFpPAXIDnY/h13qx2
      GizTLI4i0gcPUOfnsL2NuNVtDiX5aBsGIUVZkBU5nThZGlPD+EmSMJ2PGfQWa6Mw5Ilf+zUu
      fvB9kt1dBvfuoVRFpRRhEDKIN1Z4ztWO9l80JLJHWZXLwXBr7W6P9PVJvrYZaH4zu4kmV7xL
      qKt83q6p4XawbeB8plHb5IZls8s+3+yWt0Nt7YW9ELUbeTabMZ1OSdO0kYJxHNPpdJpnxnFg
      DsUrpZjP500Oe3sSmInRsRLJmnp6UUR+corKM5K9PXZ3dxtp75uo7rj6zNvVd6zx0ZpHX/4y
      01dfW5h3go13PcfWRz6CLsrafWnVXVYl8yxlms7pxgkCQWwd3qlURVlViLDeKGx4Tymmb77B
      oxe+jioKbn3mM2x94CcQwSqvlFXR5FvymcixlBx+/RtMwoi7n/rk5U6wUqpxZ9nSwhDQfDYM
      6P43gxQEwdJ/G8IwJAiC5uC3K2naTB0brqMp1oFPY/k+uwfTXfPObdv0ZT6fUxQF0+m0OVwy
      GAzY3t5eOalVliV5nq+4QA3Yh9zN4W9zGYRNuzAM2d7eJjt6xNm3vw1ak9y4wdZHPtzU5avf
      FSa+PRm7365UzR4+vGT+uhDjl3+EyutFcO+Jx+m94x0WfWGeZ4RBQFrk9UpC9IkjE7XpGSOt
      Of/u93jjt34Tldc7w2/85m/SuXkDvbvRpGY3OOYqoxfU+z9u0CbAC3//H/CN/+6/RwjBx/6T
      Xyc8Ojpibvl5bUY2J4PMfzeK77Jjq67ONE2bK398mQrGi9P+ribxPTP/16nsLMs4ODjw/v7j
      QtukN78Z6W2g0+mwsbFBt9sliqLmN9c9bNYB5rv9Fy7HoixLer0eQgg2NjaW9klMOYDZyUnD
      jMXZGVWWLa6Z8PfJ2PXuAjzLsobmpi17DWD+5+fnK3sHMopQi5N/87fu0338cQoz0bRma7hJ
      KAPGsylpnpIGAVKIhteyIl/CUWUZ84cPG+YHmgwS/d2dhn4G94CQoiiWkuNeptGRvP4HfwAL
      fF7/whcIt7a22NnZaW7uMC+4npc2s8Zu3HxuW0eYcnmeN/5vo/Z90ruN8QzT2WaIMS/+LOBK
      d5/J5w6+r49RFDWLR2O6uBPfpYlv8Wt+N3jFcdxkjDbCCFjJf9+5fYv5/fvoqiLZ2yNIOgh9
      OZa2SWs0vns9qgET7GZPdrNr3KxTtrdBiKVJoKuq3iNQimhzAxGGxJbWM383B0PUuBYc03TO
      sNdHK0Xs7sXEMZ29PYJOQpUuLhGJY/pPPYUMxMrVp0WVE8qQSlUISb1ZavXt2V/5FY5f/BOQ
      kmd/9VeXzwQb5AyBAo+f1v28ziSwv9vPoM5pubW1tbII8jFf2+LXvFNVFUdHR9y5c6eV4dp2
      bNvAh/9Vz9clsHVpJ0Sdzvz4+Jgnn3xyZbPO1GmbivZ6yyc0hBCU0ymUJeHGBrSMk/lrvFDu
      BDCXd9v4+g6xCCE4feHrXHz/+6AUIgjYfP/zDN/5bH1F0taIYrG7bo+BaSfNMy6mY5Ko3tPp
      Jx2KszPizU2y5lyxRJYlkx+8xPEffxOtKm7+7M/Rv/fMCj21rrOLd6JeY36ugFIcv/giChi+
      6+l6EWyrOrdC36KxbUHp2sPu4NjtuIcq2tpy37eZwxDVxWu1z8seENv16RLRbs+t0+2jb9K6
      f33Maj4bl7Ad7+9OAl/f19HpdJExzjcGLu3s7z4NbLfnE0Jaa7Y/9lEGz7yD4mJMvDUiHNWp
      J0W3U09AK2es60JOophBt880nbOddHn5f/yfOP/BD+g/9hjP/Id/g2A4RFGSBiXDn3g/g+ef
      b0JV2g7ERzJZofkSvwYBO88/z/379xGESLtzPoIbyWY+m4p9fnob3MPPLgFNPksfsV1G90lH
      u7wp12ZO2FLHNu3aGMQG0/51ypry5q+vDfuZay7Zv7s0dsFXfp1maBNWbWDTy7wzzs+Y5OdL
      5ZTW6OGQzpNPEI5Ga+ll2i3VZXbnQEqSKOLwy1/h7HvfQxcFk1dfZf/3fr9O+6hy0rL2iJmU
      MVmZejWwqfOqMZZS0uv1GJ9b9wOsC6m1paW9Be+qZ1d9t0lZW3ob12FDUM+BGTOZzHf7N2DJ
      VegSxFeXaceV3K4QaGNEnznh0sE1F+z37QWl2xdbI9r12/Sx224r69Lafsfuu0/gmHWZ279C
      5QgB4/ysdmEGSXOXgOsps8NPzIQwZULLLk/ihCROODOBbkmCKssm8K0X9ulHw0a4CSGsm2Hq
      DNV28KMSJRER01deqW+7uXePVGdUqkTpimJx30RvOODo4fHqgZg2aWI/c8u0mQO+QbCZ1agz
      nzlj4+WaMG3S7ipm8OFoQ5tUtPHzlbP7YJe93DldZlo7PUcQBEvpDH2HW9rgKtOljQ6m3kBK
      KEtw4pBic8OLPfEFdQ4IrUmLGUKI+j6AN95k/tZbdG7dZPDMMwvX5jKd2zZLbdx2P/ZRJq+8
      ws7zz6OKgu7TTy3euaRbJGVzUs01ccyEi4OEoy9+mUdf/SoA2x/5CL2f+Qjzot50RINAkudF
      nVzYRzAf47ZJVBt8KtsdSNvTZDOl7WWx6zflbalpSxOfFDPvth3gX3e6zYf7dcwGV6K6QXM+
      rWBckHmeL20M2mVs/OxnV41P27MG16Lg9Bt/TDke0717l433vgekZPbKq4xffhkZRWx98IME
      m4vdWM3SnQhJ2GX+7T/l4e/+Xu35EYKbn/40u5/6ZEPz8vyC9P59oo0Nkrt3Glq62gKg/9RT
      3P2lX2L+4AEyjkmGG0v4Fvv73P///hm6LLn9F36JzlNPNVrBFjpRFDF7442mz7M332QkfoqS
      kkgmBDIkCqPmIkDpqnb7u29jxGdquOCTiOskvduerz6buQyBfRsdPruvzXxpw9H+b/ps//VN
      cltb+RjPtUntvrgDaSavD1yzzX6+DoxpYxLijl/6IdnhIdV8zuTll8mOjlBpytl3vkM1nVKc
      nXH23e80uFRVhVACtEAgGUYbHP7LL14eeteaR3/0R6j5vKZBWXLywgtMX32Vs29/m/zgsHGv
      25d+L9G9LKlmM8rJhCrPlsocfulLpPv7ZI8ecfAv/gAJTdIu89+Ejmw+/77aFbv4XIkKpEYE
      IKRGc0nv0JZyrt/fNRvcv20DZCp3P7va4CozxB7oq9yY7u3tgHeCuN9dTeSzz9dpgjaT0e2n
      K/lsvA0ebp/X4e0+a9PQhnZpmi5nUdbOBNMa7eaUUXWfyrJEKUU/rHMCmYjWFUGj6lNaVVUS
      VgpVXG5eVbMZUm8v0ckVhMq+XbIol/aIwv5lLH/Q7yEWDG76YyZqEASMPvAB+k89hdDAZr8x
      2WZFvfkqhWQQj6iKRSyQKyHbCG4vZnyEtr/bcek+BjLtXHWJnq9+3++2z9c3+drec7/7Jo3p
      g/1Om41uytnnp9u8WMbEcyeRK4yuQwNTxs3WADQmVqVLoqD+fXDvHvnJKeV0SvfWLZK9PQgC
      hs89x/SVVxBhyMZ734OUsglNtjfhNIrdj3+cg8XOKsD2hz5E2O2S5WOS7ga9J58gvf+AoNej
      c+fOUmwQXAqoanHn8ODZd5KfnCCjiP7TT6O45KWbP/8ZZBKj8oIbP/0piqqk0gWdqA6FsJ0p
      WmuqbgclSubpWb0pBlRaI0SdMe4iPUGhLs8D2APrSlsfg7tE9g2G+45Pq/jqdOv1MZ39WWvN
      eDxuTlZdx3a3L4dwmcyWxj7JbcobohtamQ2kNm3q4i6l5Pj4GCHqnDs+2tl9XLLhtaZKU4Ik
      qQ+maI0AZq+8QjmZMrh3j2DQb9yHcRwvJYkC0FWFLgqCTmfJvi/nc4IoQoQhSlVIISkuLiin
      U5KdHYqgvuEnkTHpD19j9uYbdG7dYvN976PQJWkxpR9v1t67LCOI46XrUNyxnZdTsnLOqLNb
      X9ARRWhxuZay7zGAhYtdK4oqIw46K17A6XzMtJowTitST5qcUIKUNX+EZobZBPdJZHcAfNLP
      HrCrpJWvjnX1gj9cu800sieaT3q6bjqfbX2VGWJ2fQ3Otp3vY9x1da9rx9amSikEMH35R1Tz
      OTKOGTz3bH1D5Q9f5uRf/2sAZm+9xfCd70SEAb2nngIhVlJNlkrVzGkmvlaoqqI09NEaKsX+
      F/45Z997EbRGdhJufuYzxM8+hQaG734X4vHHGCyOG6qiviivaUNctmrTyua5btinF9XvF6KO
      2FSqQmjRaKAsy5r1UhzHoEHqsAmsNOOZ5nNmasLxuE6T2Y01cSgpKk1RQVlqikpAVY934wa1
      J4CPCX1rA597ss2VuW7g3SCxtkW2K0XBb/v7dnrd+kw760wwV3K7TO0zb9rWO21997XnPnOd
      EbooqBYBZyrPUVmG6HQorKxsxfl5MxnSw0N2Pv7xlQtsVtctiqxKCYiaPpx+85ucffd7zTsq
      zTj4/Bd48uZfI1xoLa3rALoojojDDrHoNC4juz9FlVFUBUIKEtltfveZ4VIsOw2MsLGvQzJh
      HHbsWlbOmeeKSonFXQ614Oia+qhT2ad5RVmJ5TvCbGK4G11ti0wXruvDtsE3Ydq+20RziWe+
      u2eV2zREWx9c/H2LTde8WjJPnPfbtKJLI99hG58PXcYx4XBAOZkSdLv1+Vhg8Mw95g8eUqVp
      na5kAel+fW2pcLKkudo0kCG9aECWZU3/xi+/vEIflefM33yTje3tBud5NkMG/Tr4TC3vypox
      Sou0TmWoQcah1ylgRx3ApVY1giYIgpWgR9OPqqqoqKgW7Ydyedw0GrQmCkL6/T6hjNr3AcwB
      D1fN+8BlYJ+b05Wi7lpgnbnia8unDVz1agi27sxvW1tXPXcZ3IePq118HiYDbvChvYexonm1
      pvfUU+gFUxtMwtEmu7/4C4Rac/Tlr5A9egRAsrtT29X4J7dvrJq+BP6UjCIIGy9NkiRMjicM
      ekPr7EiFEJfMC9QmmLjsny+9ohCi2SA153pdWrr3oBmey4sMTUUg67MHeanrfLGVQKPpxF36
      0ZBAXr67sgawJX/o7Li50Kay28wd36LUZvw2u3kdGBPBp0Wuwt2H41W/+xbh7qacjZddhxuS
      bNdt13GVWQbUi0pPtOPpxQW3bt1i52d+htkrP0LIgME77y0lkXLrazNZlVKM3v88szffbDw9
      UOfa6b/jaQKr/V6vx3Q6ZXPTXEFU/2ZHZXZkF5WXVLoiEoJqPCa0zzfMZpx+7QXCfo+tD33I
      Ozlt09vuQ1VVZNWcOOoQipA0HaMKIJTIADphD6lCVKXRqmzosHJJnmuPtTHxukFqk7QuY/ps
      5Lb21r3jI5Abp2TXdxW0vXcd82zdpFsnGGxwJ45bzqWlW1YpRYFm8O53o7QCz5VDbes8U5eZ
      wMPnnuPmPOX0j79BlWbE29vc/PTPNbl2TNler8fZ2RnT6bQ5Y+COdyBCBsmI/PCIP/lH/4Bi
      PObGJz/J43/5V9BFwZuf+03mD+ocoPOH+9z6t/9i0x97XA3/2UF3xmoRStINYuIoYppnhEox
      iBJ6UZ+qUish0qGxM32DZTOe2cHzxVi3SX0fs/qY6zrSfnmxtiptzWaNK2X/rNDG7D4N0Jgm
      6jKnZ5vJZaSXGw5wXe13lYAQor6LTQaCQmVEMmFeTEnCbnP9lM90tPFdkrBCsPWhDzJ673uo
      8pyw31+KEbLdlKPRiEePHrG7u9u0Y0foGiY9/toLpItEAIdf/Sq3fv4zVNNpk1QLYPzDH3Ij
      TckXrubmeOjibuc4jhvz3PzWEf1mYbw3HDI7zpmmikEicOe76WvYxpBti7g8z7m4uFhS/5ub
      m2vvpnUHzl3oudAmbd2JZuNlTkz58Pfh4uvfdXDy1e0yVFsYs02ztv62rZV8qn9d34IgQuuF
      hwrtvW3HB8amt9cj1XhMun9Qn9ja2iLe2106sB+Eda5+ISK2t7d59OgRe3t7zbnwOI4baV3q
      gs7NG0170XBI2OshtK6PUy4u1A57PWQUES+0iZlkLp2NYI6iaGkzrJ8k7PT7HE0mnE7nDONN
      b39De+bblbvP0jRlPB43OWbM7CuKgtPTU8IwbK7P8S10fQvjq0wFA23+f/M9y7LmBkoziG2w
      zoy6yjyyJbW9aHXtZhdXn4R1TQRf3SjFq7/xOV7+P/8v4o0h7/3bf5udj36kbmc+Z/bmm0Qb
      G3Ru3WpSVY16ParxhCDZIdMlF7OT+jctml1Tg0sgBDpNkb1es0aozs6Yvf46Morpv/MeIghI
      H+43MT/58XF9Z3AnWdqbqCpFVaUkYZfRaMTp6Smbm8tMJ6UkVBEbH/4AzwhBenDI3sd/EhFF
      RKMRN372Zzj4wr9AJgl3/uK/hQ5DQuf+OqNFiqJo+M8EFBohXKqCoirYGQw4nk4pq3rjLhJ1
      VvCiyhcLYX15S2SbTTmfz5lMJkRRxM7OzpKKhzogaW9vj/l8zqNHj+h2u80Bble1X8f+dts2
      mSTc382kms/njMdjlFLNOeM2W9s+C2AIaceZm7+2pHWlte2TtxnWxcsVIHad5t0gCEiShPl8
      7tXAx9/4Y/50kREtPzvjW//Vf83P/A//iHg0Yv93f6/28kjJ7b/wS3Tv3iV98ICX/pf/ldn+
      Pjsf/hCP/ft/lXJx84oWjvbMc46/+keUkzHdxx5n9IGfQFcVF997sWF2rRWDdz67dMsL1PsQ
      Qb9HUeXkZUogo/rO4M42QJ1vxwp1twVAPbFh80MfYts+Pqo11WRK786dOo/oYLBEV1eYmiwZ
      YRiiqbWW0opKVwtTrw737kQRpUqX7iJeNMg0HxPOZrOlE/QuBEGwlLvSLI5cqdbtdul0Ok0a
      vusy+zowEwBoQoe11s2pf6OCDbEnkwmTyYQwDJssAwYa4rtkuGKRbLJbtMF1++mW29zcZCgk
      YTpnczhkf3+fPL/ct0+ShOkrP1pivvzsjPnhESKKKC4uatem0qQHh8RbWxx//eskgwHcuMHJ
      t77NY3/pl+n3ayksVdjspgohqE5OKBaJcNMHD6je9RxovdSeSjNkHBF0u02GaBEEBIM+QkoS
      2SEMIsbZWc1wQUhZFeRlCkpQ6IyiLKh0SSCWkxfbf7XWhGVJenRE0O2iPDhZyAAAIABJREFU
      ypLZm2+RDAfkeQYszpHIRVLlQILUEEjmC9NXpRnn8ymlytkZjIiCiLxIF0m6lh0HURDXCbjC
      LuFgMFjK9txI7kUAuG17tw22/fvAycC7rryPOex2RqNRq91tns/nc46PjwmCgG63y+7u7lIZ
      t367DV/f3LWGfcjdd9TO/usebTR/bU1htEFUFMxefa1u8/iEO+97b51F2dKcZx/8EEGn0+z6
      9h9/jMETj0NVEQ4GYEKvpSQ7OmL+4CFBktDb3SW5cYNouEHgWTNprQk3NpBJgsoyoq2t2qUq
      JcnNG2QHhyAFvSceZ1ZOie7eIDiboMuKcLTBjJSgrIhlghSSKIgodc7J/GiR9ycklhEXJ2Oi
      XkBeZmjqk2BJ2CEOEzQQhZdCNYgiOnt79SRUFZ3d3XoNEYag65NfUgqEhFk55mJeMc91nR7/
      cmQByYOzC2s8YW8jphv2KA6PSLOczp3byDAkDpJVN2jDXIuroX0M2BbucF14u2sBd4IY0FrT
      6XS4ffs2Dx48oNPprMXFjVB1/7pmmvEu2d99ONifhVj1qrkeHiEE5ezyxhitFFVeEHSWzcvh
      O+/x4b/7d3j9t3+baLjBM3/t30N0Ooy/893mEgghxOLGk90mHYkIQ57+K59FRpH/FkRABwE3
      PvNpysmUaGvU3OAyfPe76T7+BDIKkUlCqDWVLlGbA/Iq40Kdo8pFICGSrNTMspK81GhdUTNh
      xSCBrpQQatBq8bRgUqaIKiAkZDPYabK4IQTxaERxdoYIQqLRiMqSW0oppvMpiopZockLzWYv
      pBPXKSHREkHALMsoShBCIoWgE0mGSY/0jbeYvPQSUN9eufnBD6Dmc39yXHuAjY3smhM2c7rS
      5e1OCBfa6m6r3xxy9mkyt1wbfq696euPu7i1Y458dr6Lg/1uuLlJcHqGSlOi0SazIufs6HBF
      w0RPPM6H/tO/ixB1avk8z1dSAgop6dy6yc1Pf5rpG68zeMc7iHZ2Vvq43HdNFQQEWyOQsvER
      VUpRhAGdJGms5kCECClAQxzGi/O1sH9+Tlqw0AIg0FRaUFUQ6JASxXye0e9cmj9ysSdRUnAy
      P6AT9uhFA6SQdO7cojg7IxptEgwHiKpCaqjQIBQECk3AZJqxEUfs9Ub1PoeGKK69RZvdVVpL
      KblYJGIDqGZTdFXVbl1DGHeQDLF8qdOXiO9RsT8utElalwHt32z/vy3pXTzbwJXabihC2zs+
      c85n0q3gHwT0n3kHRZZRKMWw32+ORdq0N04Hreu7egHie/eY339AOR6DEGy+5z2IKGJw7xmC
      XrfetS1L707xJR4SWHWruov8ywlZxwqFYUheptw/OyEtoBsLhj2JXDhb665L9EwzlwGTVFJU
      JcOubC4VhzosQmvNvJiQFnO2ertMXn+D4299i9H7n6d3dsbZt7+DVopoc5Nkb5furS3Opym9
      IKQXx3VirzhCBrK5dH2cn6G1ZpiMmtBvrTXdu3fIHj1ClyWdu3frhF2j0fIdYbYHw3ceoE2y
      2gP85wkuI7n1u23advvSeuZt4mY8NFdNaF+d6565mlMDF9MpZVnS7Xa9i3T73ILBR3a77P38
      ZyhPTgl6XcKNDYrzc978jc+RHh4CkOzu8vi/+1eIFnl63P5dlx5Nm9beRlZlzHNFKAUb/Tps
      Wlv1SgGVgCCozcc0l+SFZtAt6cQSqCeUYJH6scopp1MO/+BfUqUpR1/5QyjKZuFdXlwwf/NN
      dj75U8x1yawq2Uv6qFyRVlPKsmgyReRVSiforex7hFtb7Hzqk6AUcnHTjobaRLS33u3gNzuS
      7zLIaTlBrnnvqlNdbxdsZmkbLJ+m8P3uc126Zdw+XVX3Orzb8DD0cze03HeUVkyycy7SUx5N
      9xfvVJylj5jk52g0WVkS3dgjGNZ35R595SsN80Nt5x598UsraxulKtJyRmXFw1zVF5duszyl
      0tBNAI+QUlohQ+gHIcNORSAVSgsuZpLTScUsUyhFc6nGZneHJOkhF1ceiShsLuZYoqNSGL5W
      laYSOarQSBVSlRVFmRPJhH489ArLUmvE4kIQA42O9ElSnwniVup2/s8D2pjIxWedTe8O3lWM
      ua7Mn9eaxm7TNdPsNUSlSqb5hEBKelF9hWil6vw3gQwRGuJFUlkzAun+amLg+f5+89m0J6Qk
      JFqYQP5EYi7eBrdKVUgtKcp6UetmJ7dpHiUB5VxzZ3SbcXrB6TwlyzVlFVCUMBV6sVBVjKcT
      kijm1i//O1x885tsvve99J98gskPfogqC1RWX68U7e6gjg8QQFnlqKAO+d7q7iFF0IRlaF17
      f2xoG8f18QtOx9yK2rb8/7yh7dZ694yykbDumQTbHHIX86Zu99CJL6XKdeCqw/s+E9J9FsqI
      nd4NFIpokfw1kAHDZAuhFMdf/SPy42O6d++w9aEPgRAke3ukTnbsZG8XpRVpOWvSiEshkYtz
      wUq0h1aUqqBUOYGImnPEaTEjoj5aqTWUFXTiVTpLKalKRa9bx9yPetsMkoKsSplkM2ZZRVEJ
      ihI0or43oCip+n2Sn/95zpVClRWddz23dFVSWqTkpaKbgJC1MKhUyTg7oxv1iYMO8WJtYF8T
      tQ6WFsHrFppmoNq8Mr6Fn/387TKSLZXb0p+4TAvLmSBcPHzmj3vLo6nX9Si579n1u/3zrT3s
      ci6NbTwNhEG0QtNABIy//wNmr78OwPgHL5Hs7tJ54glu/PSnSB8+JDuub3OMt7a4+XM/xywb
      k6uMJOwu7eusozvUkzCUEWk5I81naKWpVEmRp8QRCKHJy5aLzjUUacXOjR6lKghEQBTEREHM
      MNmkqHKmxZiiysgLVR9XLAFRMskyilJwPhNsJAk3R6MmY/Q8r6iUIAk1QsAgHnGaHlGonCLL
      GXV2iYK4mQT/f2tv9nTJkd2H/TKz1rt/W3ejN+wzADgzGAzIoS3a1Ei2IkRpbD+YDzbpCDLs
      J8v/lWSHxRDDDpN+sCRGmGKEQpbsgTgjDmcGAwyABrrR337X2ivTD1lZNytvZt3bAE9ER9+v
      KivXs2aec5IQsj1I5Rx8s4GIYxAtDqE3M5zisiZH7Rhklj1v267SVwFzR8r2znxmK2cacqaK
      ZyKnCbZILdtcmARlgo3zKzC9Q3UVSQiBpFghDkYQleGWoE7DZzO8+od/gE1DHINHj1D5QFms
      MfQnoIRglS9Q8QrT8HivzaYYQeQNECIGr+UeP6EEWbXB0lugqAQqLrdA9bnwiA/RDM1MXw7I
      k9gZO2nSlKwQ+AA4BaGAABDQAdZJiXmWYXVxgUEQYBAEmCcJhpFA4DN4VKpxAYtQ1NluG829
      DHVdo768xPwvf4w6z2W2i7e+icHrMrt0KwFs3MrlwKYvpMv5y5YVQX+v6nJNvtkX87nrOxti
      /k2DaTscCjZjXGc0+lyZ46x4idv0EqPXXwYvcpSrNYKjGeJHj7Z98n1UZ2fyMjzPQ12lcp+c
      SFe5gEVgxO7W0WdLERCIJpKLNkg3ile4WXEs1hyDiCDwOTzK5AXgNEI8lLtouhuEOebIGwKC
      oBYVUBPE0bC54shDQEoQViEtOdIyRVqmmA5iTKIYhFB4olHjRG2dv1ZDKApcffDvWy9TUZZY
      /PSv4c9m8E9Odo1gF3ezIaT+3FxofafDRUSHGpjm5JlI4pJgJhc1wQxRNPtkU1fMftkIXIEZ
      5uiSjErNszEM9U3sD1GLGvx2hXK1kpdgnJ62cb6qvHILJ4Qg9geouNwZAWTeTLBt+nDzhkyb
      dLSNmVEPoedjGOVYpcAqEfA9iqMRxcwbI/35R6g2G4hHD4GXjkEYAcXuPXCCC8T+cNvvWoAK
      BlEL+F6Ak8ExsjJBwXMQAsziWbvfX5byLrBpeIy02iAp142k7uJruUla5NcWBuVyKQnApda4
      uLdtQvqe73vvgj6OdCjXtenZOpjIaUobVz8PVcdcmSkU6DEMNiJR39V1DQoP9cU1Pv9nf9xm
      XLv9yX/A/X/wOxi/9VZbfhyGQJIAjZ47svjBE0Ja//rtGstsCTrBm7jR/g+CcThDza/gMY5N
      JuNvyzJE/uQJ8ibYZf2LDzGb/gbIxG5D6WqfytCh51Xy4CHwg8YdRWzdJjpjoQAIKGGgzfu8
      zrZ2x3Qi3bc1d3nCmHQdgcUINnd2bLqvboCaE9XHlfvANJpdEsI0fg/R+fXnNsNZ7/s+e8A2
      ZptxbeuPWUZ3tMuyrGN86+VU2dsffdBJNwjOcfPv/l9M3n4bgnOc/8Vf4PM/+VPURYHZW2/h
      jT/8A7Dm9Fj1pZrPkV9dI7x7B35zhgAAm3KFgT9unQoBOK+vEpDXmQ7DCQhdIfQFFklzEUbd
      VbEI5yCEQvBtGhoFOg4xSkFtBjXkluYyWyDGwBrZFrAQabVBWq6lWwUouGj6zhiOf/3XMf/x
      j2V6xiDA+O232vOTNiDGRN59XNYU0zZ1SV9AE8F2B7l7DuHKLuGyEdS3Sid01avX9SJxzTZw
      cW7z/b424jhuwzr19/rcVWmyU0fVnJamX36JT/7pH7Xi/vqDDxDdvYOXf/d32zqKiwt8/r/9
      7+B5Dm88xqPf/a/hNfETnHNQDQ8U0dmIgEDaAqW61lVwDEMBLlIEjx6hmC/AiwLRnTugk7F1
      jvTDVwJg9bOfoZwvMHrjDfhnW49eABBEBrV7tIlyEwRYr4HhECQI4FEPBAR5LediHM46tmlw
      doqzH/xt8CwD8f12F0gUpfscoE91MZFQd+BySQb1985kOhBZr9fF5V0qWh+R7dNz9fG5DFKz
      36qMHlxz6Pc6KN8fcyxqXsevv4Hkyeed9+PXX4MQAsmzZzu67vqTT9rDIcYYlj//OXguL5qr
      VitsPvkUw197B0IIRHS4s4UMoN1JUfEV8rm8G4ARhqxKQCAvwAYEzvMcR+9/D6Go4cUDqHuF
      lWcxk4MC0ezE4vJSumADWH/8EY5PT1rvVEDaCh71wYgHSggu//zPUVxfg8UxzpoA/XEww7K4
      QcVLeWmGgVeCUpCBvDssaMZ3+W/+TTc5bh9i9akGLhXHplLp5V2qgcsPySQ6E1pOtucAq08v
      V89dfVPvlQGp99Hss63ffX1S9W/KFUIWwaN+h7nMvvtdVJs1Fj/9awheY/Taazj77d8G5xyD
      Bw9a/34F49dfB6W0vZ84vLONxQWlCE9PjKTCu/PNGAOo5PjmlnhWJQi9uOW8AMBFgc9ubzEd
      AGNSYOCN24PGaj5H8smnEJxj8PgRRBNCW63W2+8LmfWu1Mat/2NZjqI566jTFPn5OfxHj8Br
      AcblhkBRFDu+QG39nCPPc3ieh+ziYqsC6eqGzQgy/3fpuTYOa4pyFwIQsnsdkWvv3my7XSyj
      PhMOVW1UWRex97lhuJ5bD420b9pyokZabTAJj7p9ZhRH77+P4voadZYjvv8AtMntGb/0El7/
      /d/Dk//jT1AXOWZvv4MHf//vd+qdfPOb4HmB9OlTjN54HeH9+6h5BUp2DwMBeXN7LSqs8gVC
      FmEQbIOdCCEYBFK9CeoIy/wGABD6FOtMIC8FJjE6lyEWl5dtxFl+cYnR6Sm4EKBnZ0i/+EIG
      3c9moHGMUJsTpYZ5ngfiefBGQ1TrDYjvIzg+BmvuCeCFjD6Lwq5XbWcNRC2vUvU8jF97bTcg
      xkRuHXHNPJg2rvciYKoRfbDPJtEJZJ87wov0zWx/n31kjkWPIjPf68imc/pxMLPEsErYfPwx
      6lTuaKw//BCTt74J0jiRnf3Wb2Hy7rugnMNvMmV3+k8IJt/5Nsbf/tZWBxddaVtVVXt/MBc1
      GPUw9CYoeLqj5qq++ywAJQw1ryCHJgB0JV8lSrDBAOVC5i9lcdx6kHqTMWbvfw/VcoXg7LQj
      aUznS8IYzn7wA+QXF/CnM3iz6ZZQRAVYOL8QArWowQgDAUXQbAUffe+97Taovh+soDW+mnQT
      qkO2nYp9mcxehDj0ibNJJrNem4RwqVkvYtx+nXHpiK36YfNncjERlwj3tJBT0qQw12GRJBiP
      x/Bs3K/xRDXtHDMRl+wHUFYFKGEI/AABgp05Vb83xRIqBUtZcQAEvkcQeFHbNiMM/v37MhU7
      5/COj1tJyjmHiCJ4cQxBCKjFnlJzCUh3cO/+fXjGGYjPIqzyWwz8cScNfMkLpOUaHvUxDCaA
      utyDkO0NMS5QE6QWSyeUPjVgO5F2Lq/aNaWKCYcc2evEonxAdHBJrX0gxPbGGJdNpO82uU7F
      VbJZ/Zn6W6VzOURiEUIwfOm+dEvgHPXtHMXVFfLBoEWYvLEB8jzfGXcfs1BzV9c1oihCHMcI
      vKhNOKAjpE5AwNatmRCCopSnzj4DQhahqiu5fw8qZdp0irxOUNYpQhJ37yswiFFnHKqPZsSc
      DgELQQjFPLuSLhwshsc8+NSHF8zaaDQh5M4VI2w3PbpaVH2STCQ+FIn0wZgIoNen2uzzozHB
      VM1UO3oyXB1s6t0+UByqb2x6fcoD0SZ19HlT/+tB9IcSQJ1sOoc6xe0tMBi0qoLynjSzLKvf
      +twD23lXWT0IkcnPLi8vwblMJTiZTDAajbr2geahO/QnyKoUeVEjLSgYFRiFIzDqWRnEgA1A
      GUNSbhB6UZusts/20+fN/N0+A8FRdIqsSlHyHGWdYxIeycAX0l2vTblEzEZbFWifqqEPwjyI
      cqkj5nsX8ink0HdWTNDrMolSB11a2dQg08jus2nM932Hf7byqj5X1jxCSMupx+OxVcqYY1l+
      /sX2e89DdO8e/MmkI1GiKEJWSRcCn/qoeIVhMAEjhznqEUJweiqzv2VZhosLGascx3E7f4xJ
      nX9TrlDxEmkusM5UVjYZcql077LKwUWNwAvBn11h9eGHYFGE6ffeA5jd3cacBxsu6RJBzRMF
      wzAYo+IxFtkVbrNLjIKZdANpgAuOqi4hPC5VIHNx9Ub1junlbAhoQ3C9o32Sw/Q4dQ3epmrY
      EFcnbNvYbDaGDVyqU9/fL6Jm2fpk1qOPqU422/eUQgQe5qkU+QGL2vkKGvUjr2RSqNv0Ah7x
      EfsjMMKaNCW+dXz6nMdxjOPjYyyXSyDgMhKrFsjrDCUvwAWQZNI1GpDIH4cEQjTJxwgDpx4Y
      PPic4uKnPwXPMlSrFZKPf4XJt79lxaGay2zPsbc9yVb93IdzgDw7EAIAEUjKFXwWSDsFFJRQ
      HA/uQGSZOyheXxTb4ujvXIExOnGZ1O065dXL6PXoeue+01tTz+2zU2ygI8WhO0qc10irBMNg
      vLes2c6LlB+//bYMiN9sMPm1d5CxCnmZgQuOgEVNjG0JEGAQjOQhFvOQ1ymKOsO6mEMI6Vzn
      Ud/JIIqqwirLwIVA5Hnylsl8iOfzhaVnFIQAx8MBRhFBXicIvW2KGo/IvJ2CElDPa0PxqRGe
      qNomhIASuoP8Jj72BmQRAXUXQcVLZE2CYEDTUDjfjQew1mVwIpeKo97pSG6qSzbbwpb+2mzf
      Fhxuk0KuMjqYTlguVc40wPptFNLec+UCU6raMlHsYypsMMD9H/5DmT2NZNjka0MdA9J60+zv
      U3jEB0iMkMWIvAHScoOkWrW+MqbNtM4yXK3XSIoCvKn3tNl5UjerEgK50wkCRgnGUYRZPEDk
      +/JKUsjTYgGBsi6QZSlG8QSUMRy9/z2sf/kR2HCIwWuvOvV8HTfMOezDRwBtFJy0TRIk5RqU
      MET+AKTmEFkGEg9A4ribFaKznKTf2N1HBOqdi/vauL/pPanXqS+UjWvo/9vqt6Ul17+31Wty
      Gxf0jdMEVxlX4JGp7vH1BtmXz0CYh/DBXWSUAmDwadB8QzH2ZxCCS8OUpyiKDAN/jNCLZXhj
      JeOO1U4rIQR5WeJ8tcIySSAAhB7DIAzBCMEw9JABGPoe7kwCgFYYeGMELILP5C6R2umKgyFo
      ybBOlvIEGB4G4aidP+/oCEe/+X0pEQhBUaUNZ7bPj404XDiiGKUKkIn9ISJvgHEwQ1YnEFmO
      9S9+CVFVoFGE8VvflARwyHam+l8vYyaTUmUUB7O5NNjqdhm1Nv2/T1dWfVJ7y6Ynq2tcJtex
      qVB9oAjkUEmqj02Bfs7iknKUEKTPnrW7QOTCw/Gjh1ChjnrGCQ6OSpSAkL+TcgVGPVAwxN4I
      abXGOl9g4I9xvd7gcrWSasxogEkUYxTF7XwSQnANIAx8cBFJwioTMMGA5nLtMAzbdYyCuLUv
      gmD3/EAIua1akwppue4QgLk2ajydHbaqgpgvwEdDUM1zVeGcT0KIejt/HvMx9mZIn3wO0eyO
      8SxDeTu3xwT3gctoshmkLlXEJfb033qwik3F0su2SIL+IJxDx6iX21feJpJt7evvXQSnMwNX
      +/oVpIQxeZsiujtSgMzmNvInEBCoeIlNucQiv8HQGyNkMco6R16nuFpm2OQVRlGAl2YzBGyb
      rzOrElSiQJ0AQRAgqVbIeAYBeUkF8Qh85rdnBELItjzqtwhrzoWuXhJCWsnlAkIISJZh/tOf
      gjCG4eOXcfWv/zXK1Qo0DHH2n/wWoocPO5szrBKo/vpj3GwSjN98E6AUNz/6/8CLEtHpKajn
      AYSARuHWBjgEMUx9+RBX4j6ub1K5jvAdzmeEErr6SbBrbPeBjUhcSLqvDnNhXWV1ZuNSuWzt
      CyHRPH70EPnzcxCPIbxzt9f+oZSBCw6P+hj5M0kI1RKxGKIWFbJCYJ3XOBkNcG96BNpIkaLO
      kFYbMOqB1T5uFtc4vXuCtFoBECCUyNjdZmuRMdbk3Gdt0IqZNtI2l6EXdYxlm6SllOLmRx+0
      VyetPvxlewMmzzJc/9t/h4ePHnW0kcVPfoLNrz4BgDZXkgrS8eIIg0ePERwfgY1GWwmgDj0U
      mHr1IarAoWDTw83JUWqMzVZwfeNC/q6RuB+hdWS2tXPIty7QiYQQ0npqmqogsLuFK4QACQKE
      jx/JNihtrwxyzcMyu4GAwDQ8gc8C1KJCXmcQAthkApHPcG8ya3LtlEjKFUpetHvnT548wWQy
      QeD7SDKdwEUbmAIAgRciK1Mk5QpH8dleBmLOg3pmluF1jVrzcDWTAvCiaO8LAKSkKrWdKlGW
      Hdfq8O5debG4wnnVSR3hXGpLZyEcKs2LGINbTrVLEDa3Ar1snz5tg77dg76yL/reVCfNuOPO
      /0IgKgpUqxXqqoI3mx1M4EVRSL0bXb8e87IORj3pBEbkroxPAxQ8AxdAzQWiUKoqabVGWReI
      vSGGdAJG5dYnIQST6QQEMiglr9JW5eKiBjjR1A/IiK09c6f6l+e59SpZZc9UVQnfDzB7913c
      fvABCKMYPH6M2x99IHV5QjD7znek3RFt/Y5Gb7whLwnnHOGdOzh6/3tY/NVPwaIIk3fe6TLE
      i4sLse8uXRuC62rL102X7pogs+0+WCwWGAwGO5co2+rV+/5VQJ+rfcZ9H+TPniH59DM0HcPw
      jdfhN7Gqpoppqk7Kp12NSVdLbQZ5UqyQVhsQQRH5MbICeLZYYBrFeHh8jGV+g0l43GmjKArc
      3NzgwYMHbfs36XlLAJE3aGOOdbXWpR7buL4ah7nFbN4z7Ck8Ywz1fI70y+cIjmYI1fVQOv4B
      KBcL8CxHcHoC9Nx17cnGushv00NVR5Rep++Lq1hP0z/GpRLYuJxN1bJ12CWddA5oE7+imZiv
      Iq1M6NNZbf21tUEI6aYzFAL583N4JyfWG2l0BFf1KfVJ7wsXvL3cpP0O8uSWC46hP2xOgysA
      SyRliZpzDLXg+aqqWj9+c7wCEl9CP8bQn3Tm+xA80ufF1Cr0MpR2s1WAUhnNxRi8oyMMJhOp
      DVi+FwB4HEuXcKNv5nrQQxGPkG2qdEJIx8oHtjepmPqzqy4huldo9un6JpiTZ3Jjs668LPHh
      8+fItZQhffZAZ+ItYEo7W/l9OjAgT0I7f4dBe6ui+Y/S7dWgjLGd+VfjqXmJZX5jSAzeHnyp
      4BePMXhUxvXOkwQe9Tr9r0UFIbZXGJnj90nQqs6qbaVJ9KmYAgKrYt7rglLzbRyyLkl04teJ
      zcS5ti1jPRTO6f2jZoV/E4aufgZgim69o67L71wc2oXgutg1pQAAFHWNsq5xsVyi4u58mGY/
      XLDPRjoEhBAYvvaazIJMCLzRCIOXX97hivrYDlojQlBxefmERGIBzqX8I4RgVSxkukJKETfq
      4kqdKzRzW9QZVvlte8GeglpskacWRoY6Y94VIewiuUBVFyhF0Ql2UappzWss8utOQNAhNp55
      7mQG0ujzqPepPQhTDdn+dum4+jtdBzTBlvXMLGtOhE3HdrXVEWkWf/Gr5naQRZoiK0tMBwMc
      DwbwDS9N/Ru9HnP8ukqo980mYvvmkA0HGL7zNlDXYFEEWOZPBaTrerVLx+6MBUpN9eBR6ROf
      VRUolTlGhRAYRRFWeY6yuXVdR15OBKjo9rnmMj8PAGTVBh712qS7+tzo/++sFShif4Sal4iC
      uLneSLQSZJnfdtpRz22ewiaz1PsQ+H4npMiFc9Y7wtRL2zacK9uaKY7NjtoWzZwkW+CDa8DW
      SUBX9RJCgFCKrNk3ltxNSgIC4I4WNmgb7z5u69qRsi2K69R8lSTgnOM4jnfqIIR0dHH1v9LR
      1bOsLLHK5I2IvkcavVdeSl1X0idIdcUjPtCgxjiK8Gw+R8U5Ks7bJLQ+DTEIBkjr7fajNET9
      Ti5OLnav2HUxC/0dox4iOgCqCtmTz8GLAsHpCYLTU0CoOe/WSThHdX4B4jEEZ2edOTIlvkgz
      rH/+c/CiQPzoISLNiNeJPM/z/vTotltSdFFsUpVO7fpzF1LZJIDermsyTY6vYFMsMSQjeDTo
      ENSDoyM8aTIJqHqu1msQAEfDIbzGfnEF07i4uppInTO5Du0OsQnUe5tOq/ql7saV+j7H09tb
      LDMzOazAIACEWEI1p/oSenHbR58xMEeElccCAFsCIIQAAhgFE2wKaaSqgzBTNRVC9F4tS0Ah
      iED+5Zeo1jIjRPbsS3ijEWJviIBGqKu6Td/OGEP29Bmq5bKpgIJW5vq8AAAgAElEQVRMJ9Zb
      OSmlWH/0EcqFPAtYf/hLBMfH4BrDUKlioijqJwATQU01Rp84XX3Rj6X36a06ZZrlbBKoj+MC
      BKtijoBGGIaTdieEUdruBiioOcfleo3Q9zHWbpe0qVCmjWFOuDkOczwuFdKlKplzpfv46D4x
      54sFllmK0AcCT4AAyCuCogI2OZBXAkcjeQmFassjRtp12ahTautACAGBvKdAf9bq2xBIqw1C
      FnXCDwnpevO288TNcdaoOdrAnU77uu3WtGeGq7bEwA37pJk/fc2U75KVAFyLdoiDmXkuYA+4
      3jpuKeOlDwH09kyK18sOgzEIRZMcqW6zEnuUYhbHqDhHXlWAEDgZjTCJYwTajeam2qX3dd8l
      21sGwRt/GOWdaY9MM+dYtWPOlYrVpZR2duFWaYqbJl34KNo+HwCoa4FVWiMtgGUCTIcUlAAU
      FB7b3Tr1GYPvGJ++U6cuJ9dBXUouhLw/ICs38GnQJMrSfJMs9Yd376BOU/CqQnA0Qx1QVLxA
      5E/a9lvJdf8l4Pk5qMfgn56gbPKIKtBxbvjqq1imP4MoS0QvvQQ6GIA286MIkVIKoW6J1MG1
      PdWnC5tg4+bmgJTKcahqYGvD/I5AGni+H3QIJPA8PDjaci0BebfsvjHp/VTICGCHaNUzQEqW
      TblGyELUokbEhtJxzEB22/yYJ6IqG0egUvlpRJOWJQgRGITyG51IGSOYDhkI5UiyGrcrgqMR
      7dy2ooOvrYPJTeu6bm9cKYoC43E34Ge5XGI0ktc4+SzAJDxu6uj3E6vqEgg8DN58E+A1iO+j
      qDPrfQIAwD0P8Ssvb+fNIER9Tr3pFEfvfw/lconw9BRFWSLLMqRpijRNW4N6ttl0vUFdSGgz
      YE2VyHzuiqSyGYg2Xb+vP2b7LtD7sSP2tXrM3+a4TGPLfK9/p1J2632wqVQKxqMRUFXykK55
      pzi+QnxbewQAaQ68BOzuJOOIgtc1shK4XtU4GxMg3LafFAUqznE8HLYpBXklOifMAHB+fo7R
      aATf9xEEAS4vL5GmKR4/fgzaHFApfxyl+ydIcQiocw8GIAy2LtideU8SlOfnWM/lBYFH777b
      qUPHBcYYqvUG53/2Z6jWa4R372L4/d9AmmUYDAYYj8fwfemtmnz++TYznII+pDWf6Qtrivq+
      GINDkHcfuBBK1+FtRqirL/uemXXoyGjaQa4xm6oe6hrpLz5EtV7Dn04x/MabKDUjt+RFx114
      x0YSBAIyj44NCAEmQwa+rlFUBOfLDcpKwGcMtRCYJwkGQYBRFCGvEqzyOXxEmHjSJ2k6nSJN
      UxRFgdVqhelUnhYrPyRA5umfz+cAJDIrIuljXlxwCMFR1xxpmmK9XrcHVMPhEHEcIwxDKdHK
      Es//+b9AfnOD8PQU688/R/LFF3jwwx927I8sy5BlGYqiwGi9bo3r/Pwcx5xjeHYm29Zs0vjh
      w8MuyXOByflthqD+Xv//kACSQ9reZzO4kFlBH6GaHF/1f58609emKlvXNcRi2e5WFDc3iDYb
      +E34YVpskNYbzKLTTjYHZTsNwxBkRZDkAuPYTcCUAEdjhjTnSHKBGy2onlGBu5MpIARCL0ZW
      JfDFFnk55/B9H3eanKIq55BCckB6Xx4dHXWMXTVO1ReTMWyKFbIqBfUohlGMQSAjxqqqwmaz
      we3tLcqyRBzHGC4WuPrRjyDqGt7zczz8B7+D5ccfI1mvcbtctvPBGMNoNMLR0RFIk0JRVBVY
      HIPFMm8SZVJ1TcuNTApAPJkWxeU/oyOBqQa5EKEPeWz16/XZVK0+6JMuCsyYZL2tr2J3qLHY
      1CGbNHT5x1BKwcNAsmkhzytoszMhhEDJc3jUa12ddWOSUgomBELfR5IXGIQCjNrPYVQ/hhFD
      HAhUtaZ+hWMMw7htc+RNAWzdD5bLJaIoauuoqgqLxQJhc9H0YrHoGMb6uGteo+IlAi9sd+PU
      u9gbIvJiORdC1hsEATzPw3Q6xWwm05vXdY3z/+fftvlEq/UKydOnOH73O4gGA5w1UshrcoMq
      9YucnODu3/07yK9vEN+/DxL4INpOFRccaSVjqZ0hkTrV2sR6n2qhI4R5ZtCHXC6J4vIstH3n
      6pfiTqY/iS0IR5W11avvatm+M4O4d+wPjRDoYIDJO2+jnC/gHx+3N5gTQjCOZkjLDfrg4dER
      Pr64wPVSYBCJJh/PblIAZZCOwnFz7SqVF1IYeYLKsmpDGBWCP3z4sO3zcNjN0gCgcyDXmQsQ
      bIoliirAMJjsMACVDMs8L7hNr+ARD8NwAs/zMHj4YDt3jCG+dw/DV19FyXkrhcx66rqGd3KC
      oFF7hBAAAbIqgRAcsT9C6EVYZNfb9Og2Mf5VQFcVXEEtfd+Zi+cC2359H+j7wH31m0Trgn02
      jG1ObcyATafAaITnz5/j/mioqS4ydtfsqy5ZQs/DyycneHp7i3Vao64FRnH3AmshBCIvavMB
      mYio5rAoilZ3L8sSm80GcRx3mIRrzLZsFoTIa5T0oBnbXOj9FI1tUIgcw0ZsHL33HnhRYvPZ
      p5j+2rcw+/a35BvtphwT55BlOP9Xf4H0/BzjN17H6d/6W6hRY5XPEbAQA3+Eqi4xCY+2ibFM
      LmV73rfApk5uHlDo7tI2tchUF2wSyfz2EEJR9ehblzYpoT9zZacwkdCmsvURjhqjaf8ot+bL
      y8tW37aNy2yXEIJBEODlkxNcrtdYpCmKSiAKZIIqef4nb05hxGsvpNPHpXZwfN/vjHuz2eDk
      9KR1LzH1eNs8budKujKoC7ZNNTuvU4Qs3sEDShmGwQQ+C7bJgSnF5Nffx+TX35d5VAmBMKSs
      OSfn//LPsProIwDA9fU1WBji6Pu/gciLUfEKm3KNgIbwWQhqLppL1XGBjUDMukyCMA989O/0
      gxYT0c3ffYa0PukvYoPobdgIcB+YYze39NTZh8kN7927hzRNcXV11Zk3s0/6MzW+0Pfx4OgI
      r56e4u5khrr2cLnkWGx461OZVhtUvMs1s0xmdwvDsLM+i8UCQegjEyvUouxIANs4zbGaM9VR
      LXkl7wcm7g2TrNyAEIKKV6h42Z5F2HDDbAMANk+edN5tPnui9U8grxKo4tSFHMq61v2nbbCP
      ++r/uzivqe+bi61zPtOY7YN9aorZV7Os7oLg2h521a9ULpNIXWobpRT37t3Der1uiUBJLtt4
      TY5MCcEwDHEyGuH1O3dwbzJFWVHcrmtwdcWQloS2KIqG63ddOVQ+UG9AUQveud7UBVxIg1cQ
      jopX1tTuaq6SUhqfteGuoGBTLJEUG3BeS7fpurCW64Phy4+Nv1+GgLzHYBqe4HhwFz4LZcIA
      wE5NJoW7FnqfhHCJcfO3Xt6lVrnqcnHqF+mzyXUV8plGbV/dOqEeYkPowDlHFEV46aWX8OWX
      X0IIgZOTE+s3LoJQQAnB6XiMOAjwq8tLrLMaw4mnNJP2lFlKjyaGtyiw+NnPUS4WmL72KsL4
      DEmx7qRh0ceoS7ZlPkfFFaIS+NRvwyv1vgsht1sZ9aRDnEXNZFReb4qmbxBAXuegVCbnVfPq
      SjgshMC9v/f3QIMQ2flzjF5/A7P330NSrNq2IWTAzzKfg5yfnwtTLNsQzZwAW7kXAZOb99Vn
      48Km5JrP5xgOh1b3ClOCHLLVaiO4Q8F1Cn5o/WVZ4uLiAlVVYTKZYDqdOlVIm63U2lRC4OOL
      C1S8wKPjCUahPMjK87zdNuScIyAEn/7jf4LFL34BQEaqvfLf/jeYfvvbO33W1VkFtaixLuYo
      66Jpn+I4PgMzosz0Pqt+1nWNqq7g+R6EqFtPXh0XeZYhv7zE6hcfQtQ1hq+8jGq1gj+ZYPj6
      60CPn5ZUu2rMs0sENIKMM+aI/CHm6dX2IExXO/ZOLN+6qZqNqk67YF8Zl8Fpgksq7dPbD0Fq
      U+06lBBMQt1HCK658H0fjx49QpIkmM/n+Oyzz1pC8H1/xwNV1WFTiwZBgNukQF7lGAaitUMA
      tNuI619+hMUvf7kdR1Hg2f/1zzH7znd21FHbRoZHPUyCI9xkF2pk8gIKbZxc8OYSDblFqm/B
      EpAmJLPLvDjnKK+u8Pxf/EuZ3oRzGTik3TNWpymm3/3uzlqLskS5WiE4OgKlFJPgGAICy/wW
      lDAMQDCLTnZdIQ4xhnWjZ10uQEFb7qJPll73Tgc1bmYz+syF1b+z7aTY+ml7ZxK6CXr9feqU
      7Vuba7RLVXIRhq6LB0GAe/fute4GT58+RRRFODo66qQcNDmmTrxlXYMQmR5RnZia8+ANB/KZ
      3g/LBRuubW0hBLIqba1fWZeMCWjtOEiDXBAORqhUgxShanNRVVW7p88Yw+aTT9tEWCAELI70
      ppGdn2OKLs4t/uqv8Okf/RGq9QbR2Rne+B/+e0T37kEIgeP4DogQqLMMzIwH0JHS5vZsM1SH
      /hiAm1jMSTTL2MIxTfXIlAZf142iDxSHtCH/vjZN4jrECLepgeZc+L6Ps7MzVFWF5XKJL7/8
      EkEQYDabIY7jDsLrNgsXAklRIPQJGCGgdLtdqN/7Ft27h6N338XNBx/IPlCKO7/9n7b3C+uM
      yUVwNa/aa5IkQSQY+VumqMbKOQeEVPOA7f9qh0c5x6l2ojtnWP6MAEIAQoAXJVi4JQJ/MpUJ
      cYsChBD4hOBX//P/0voCJc+e4bN/9sf45v/0jwAizfOL//vPkT59iuju3W52aJfRaePeqhzF
      lqPYRHK7GA514OuoKYfYDzYwY5RtapfZlq7WAP05hfYd0pnzeyihMMZwcnKCo6MjLBYLnJ+f
      YzAY4OzsbOfwruYczxcL1Jwj8ICASf1Xr0/p4EIInP3wH2L0yitIz59j8o1vwP/Gy+0WpJ5+
      xTY/ADAMJwi8EKt8AQGOos5BQtLZE1X901VpNU/Kua4WdRvM79MA8Suv4F4YIn36DMuf/xx1
      nmPw6JG0AaZTTL8j7ZQwDKVH6tUVqk33BD27uECZZqgZBUtTbD79FOAcyZMn9vsBXMhkU1l0
      0JHEFPPmdp5NTTAJyNb+vv7tA1Mts51JuFQjJX366gbsOWj6kNxkFHp5UydWdc9mM0wmE1xd
      XeHzzz/H3bt3WyTiDfLfJgk8JhAHrPWzV2PWdfr1eo00y3D2H/9HbXtlXbQXaCjVqeIlkmIF
      n4WdYHhCJKKHXgyP+VjlC9RcZqZW9ck9/QIAQcgkB6eUwvO8Dk6lxRoll237jY0S3b+PJIpw
      51u/hriJnW61FZW6pYkui05PEcymKG7nbf8GDx/CHzR3AXge/MkE5XwObzTaZoY7BFwHWPoi
      7rj8YleFMI1M9ezrqDb6LlCfh6etzwpc5Q/h+qo+G6KbGwh9xObqU5+kXK/XuL6+boni6e0t
      5kkCxgSOxwweZZiEsyZluaxL2Ricczx//hwnJyetX49JtOreYKEuvKg2mEbdLVpTY1A5S1sC
      qEssi1sQEEyjk9bJr24yUqi2udimU6Fku47Pnj1DURR4+PChzB6RzFETGcNwFJ+2RjUhBJtf
      /Qqf/vEfo7idY/DgAV77734ffuNgRwiByHPkl5cIT08lAZhhi7aFNUWsqTrYVBzbYvchh45A
      L0oIh2yDqt/mO71/rvG/iFq2z9DWwUYAfQzGVpYQebPj8+fP5QV5jCEtM0yHBB6TdTHiYRoe
      Q2VcU0hdVRXW6zWO9Ig5Y450o9Rsd998qHok0+MAAYq6QM0rxN6wsQEEqEe7rhPqOhqBVkpd
      X1+3BJBkGxCPoKxzZFWCs+FLoGRru4m6Bs8yeMMhYOBdLWrkVYKBP8LBvsc2o9g0iHSHM/WN
      rvOZE6NPTneiumL6RcA8vLIdZLlsGhccSowm4ZnqlqkD28an68bmfJrf6/0KggB37t2Tt0Ry
      jtfv3EPkB6h5jdgbNfeHsd16VisMkgSiKDrtAF1VtuMdS5rEuAeCGkPBc9S8bq4tWkFANBKb
      dWIeVGKvim/vfFbGvupf6EfwEUgC0dK+qHHVQgBNriW9DwAgwLEpVijrQrpC7ONU+qL0lTkU
      UWwSR0cGXRX6KiqRLgX64FBO9nWhj6P3bTAcCkIIrLMMn93cYHJygjRJkG4STMJjeNRHyKKO
      IxwgzxrK62usfv4LJJ89weqnfw1iIUZl9+gMMC03uM0uexlUxUsUddYpk5WJzDhXF9JLtGlD
      1s/aMov8Gh71OhksVDk1L+1ZBoswDCbOqDgFOs5RMIzDGSpedS/IMH/rz3Q7QTeg+uBQfdbG
      ERXR2cBUk/qMS1usrEl4X4cAXGqb2T/bb53TurJn2MZnEsk8SfD09hYAEDQRXBcXF4iiCONg
      Bi7qJiFWt291so3b5UUBUVUQRhY61T/GGERZgfgeAhYi9Lr78aqc+jarUqTFBrP4BIzI3fZx
      eNTEPkufDCqA5MkTVOsNBo8ewptOpRrDBajHrIxS/+15HlChkx1CnxtzPWout34poYi8AVbF
      vHsQpiOcrtebxqvNBdgGfYvu+lZHJn070eUG0Qe2Nl2/+4zMfW24dn3MMbn67doetp2JKNVI
      MaRVluHp7S24EDgeDjFodk5msxnOz8/x8OHD7U5JgwSKC4Znp8gvzsHLCsHZGSoiM7Dp/ZVl
      gfm//0tkz58junsXs++9BxjroTw2lboUeCHCOIbPtsjJOqe/wOW/+gtsPvkEADD/yU9w9z//
      z+CfneEoPgOl2+11GyNscfbmBud/+WOEp6eYffddEMYAzlE8fYoqSTB8/BhsOIQAx6pYgItK
      1q+SBJsNHMKFzdwwtsUjpBsD0FfW9b0ujfSwO9dppDLuDgEXVzb7dagq1Vf2q6g1AFqHNXN3
      TM1pXpb44va2udXRw73p9uBpMplgs9ng+voap6enbR/SaoO0lLs4lDFE77yDgDGQZkeoKGXS
      WhXIQikFFgtsfvUrAMDmk08wePQIOJp1cIUx1nGrrqoKVVGhJnYcIKuV3I9Xc1SWWPz4Jzj+
      u38HnAvUVXcd1fh1QiNphs/+13+KOpWSrMpSnP7mb+JX//ifYNW4drDBAK/+/u8hfOUhAIGB
      PwZBYycKsUsAOnSSCB2wW6IvkBDiIF28T2TZbASlj9oQlhC3l+ChYFM7XmTsrjptEVDAbmpF
      HfqIVAiBi9UKVbNGx8OhzICnlT09PcXTp08xm83aOfOo30GmNMvgT2VgPEeNTb1A5MWI/fGW
      kQWB5PicA5SCBoG8oM+C2PKuMK+N03XhV+1gfGq+XBJfD2wqrq9b5AeA9PMvcE1Ii/wAUCcJ
      nv7p/4k3/9H/iLF/BM55e6WrqCk8SuneBXD97wKbTuuqX5VxqUa6YdxntP5NG7Q2Fcb2zgam
      2uayl9qdGKM+87BRZ0Lq+SJNsUhTUALcmYxwNOxGewHydHQ0GuH29hZnTULZyItR8wqMeCi4
      DIPkgoMA8jK9YNKqTKpNbzrFyfd/A+mzZ4heegne0cw6ZjWWosoQNIdduv2oynDOEZycIH5w
      H+kXT2U5xjB55y1QRkEAZFWGyIsAqHOEXWlIX7qH4PQExdV18/3bWGrIr6CYz1GlKUQUtfcr
      EEIQktCdFsWG7DZD9RDoK9+nhpht7iO6Q20D1/c2ZHyROs1x6psJuk5vEpRrbCbRqG82RYFn
      t7cABKZD4GQ02rkoT5WfzWZ49uwZjo+Pm/FJx0WlpgRBIL9tIrQ8EoCy3f4FDx4gevSo+Vvm
      9FGnuEraA5KIqlpexFfyHLE3bPf3O2MlBHd+8AOsP/oI1XqN+PEjlLMQXNRIyjWKOkNRp5iE
      x8irFETsMlQaRXjl934P648+QnB0hMHjx6hWa9wY8xDMZvAGAxBvGxDU1rEza5YJNw24faGI
      h3D/PtDPAEx7xGUzHIqornIu9eTrgM7hbRLNJQH0TBVKhVCIc7PZ4MnVFWrBMY6BSTzsuBbr
      awZIKRAEAZYqs7IGaZoijmOk1QY36QVqrnLw7x5YKpcIzjlW+aL1LlXj1MuHXgRK5CEV0JWc
      nXnwPAy+8Q2M33sP5GSGrErBBUdVyxPegEXIq1SqVE1O0x1pGQQYfetbiB8/lhsBv/l9jN94
      o33P4hgP/osftshf86oTZeaUAK4dkn1IbZMWhxjCpguFTT3qI7oXIQCbGtc3rkMJua++Vmwf
      EIxjAyEE5psNvlwuAQiMY2AQ0tavRh+PTrh1XWM2m+Hy8hKz2VZ1SZIEQRAgK1NwUWMaSveE
      osrhs6DX3Xwc7qpA5tgDFmEWBVbJpJdVxO17MlyRUQ9H8SmScgMhODwWyutdHRsvnPNuKkfP
      w6t/+AdIP/9c7gK9/DJYk/pRCNEQVoiiIc4dd2izg4eI6kPqOBTBdJ13Xxv694fsTJlt9ZVz
      Ea6LSPe1Y7vh5JC+ESIjuy6WS9wkGzAqMBkQBJ4MKvFosBO/YPZdhRKu12sMh0OkaYokSXB6
      eopFdg1CaONGwFunuX3r5ZLEehlGdgOm+urVXSEYYZLza8lyFTPc17YgBMHDhwgb+6OsCyyy
      a4AQjANJvAQEy/zWHg9g01NVB/oGbD7fx7n7bAK9P66/9W++qrplqll9i6TPi2sRbPNmPn+R
      vgoh8MXNDVZ5DkYFTsYU6vOhPwajbGcdCJH3hNWiar02J5MJbm5ukCQJoihq443HodzOlJxa
      hjPus7lsTEAfJ2DPnMcFB0VXsuiMQdWVlht41AclDEm5xjAY79UObJsgqlwtaukICAGvCcTx
      mY9RMHVfkaT/3Yd4fR6ifc/1Du5r32zPdkXToXAIodr6bCOUQ9oA7B6yrvdmPZxzJI2fThzI
      RLge9RF5Q4Re1HJ/feeNUoq0yDsc1fela/NwOMRgMGj7oU5pZfv2bNp9Y3PhiA0Z28RUwajz
      XLcZq7rEplyCEa85MRY7l2/vW/edskJgGp10iHOZ38hQzH0fK0p2BbTYJsQ0+PZxVr29fTaD
      uT/8opxf/8a0Pcz/bWOzEYFpqNvmQG/frO8QZKNEYBj6GAYjRP6gtS3VGpn1+ywAI6zd946i
      CKPRqM3nr3N5c4PDdtBom0dzDLa5NAkzr1NEfEuA5s0xjHoY+zOp9/MapLnUTz/N1hHZlrPI
      nE/b7fUBi2SCXnPC2+RGxm6Fvqetc8p96sc+TmlyXXMSXaqGmvAXMVDNvppGo17GRE71zHTU
      s3F7Wxv7+maqHer/qq7BhUDoeTgenCLyBm3eHb0/JkH6NIDgQJZl7QntdDpFlmXtQZBtHH3b
      wWYb+u6U+U4908NLIyb7zsXWs1SlgteJOPRjUMrge0ETw7A9PyjLrYeoy66yqYTmGsX+EMeD
      s91tUNvHX0fH7uP+Li60D2xc9UXVIZ1D2xz9VJlDOOG+MqZEsF0QbkMiQB54CcgMD4yyNlmZ
      jQnp/S7LUt6s3lyyDcgt0TAMMZ/PO7G+uhTRx1LVZa+tsy8xgSnRAy/ELD6Fx7bRaXqdOuGY
      zFFdDq5StLsY4CH4pJfZSYtiE2O2RXoRgrB1MlU5KZv7qfrEmN4PM2uza4C2dm1lzN+K0+gi
      /VDVzVSBTHUL6O7xuySFzg1XeQ4IgUHotd+75kb3wwEkd9VVxrqucXx8jOfPn7dB5C7HRs45
      Sl4gr1MM/PFBCGX+bRu//rdub5jJEVRZfVxxHGOzadImNmnZdQ3FlIjA1p9Kz2KtxkcI2WaH
      1qlPL2BDAP25S2S2kwF0ckaoLb2rJmp/GkV4aTaDRykWSYJxtI0XtU26jer7bBPbxNt+28qa
      v/vA5c5sswmcc2W0f75cIilyRAHgeRU4r0HIloAAdVev6KQwVASk+0WpduM4RhzHuL6+xr0m
      VYiOgHmVISmXmITHCL0Y8+QKTPgI/NDKyEy1Rz8Zds2jaR/o+KSYnBCivfFls9m0kg9AS7yu
      ObT9Uz5Evu8jiqL2dycewNbhr8LxFVysVlhlGcLGx7zQ8ozenUxQc47bzQZPrq8xiiJcrdd4
      5eQEsXY3ljnRfaqULsr3gUm0h8b9usBGaC4RbyKNXkZH/qv1CqEvMB0yCHDkddZuayrkkdug
      XOa+h0BAJAPRD4f09uq6bp3kVDZqfc486mHgT0AIRVVWmITHTqdGhfDmLpdJ8K3zmWVOKKUo
      iqKVXOpKJsXdoyjCZDJBFEUoigJXV1d4/PhxSxBmCKxqQ3mMqnbKsmzrTZKkzYrdpke3icI+
      fcr1nQ6jIMDlaoW0KHAyGmEQBNjkOc4mEwyaxE6R7+NytUJSFDgaDOBZ/F9solTvg/7eNNZd
      otslCVwSw6zHRFxThO/TjU29XfVdCCGRf7UCYxL51Xd5lbYE0M3Xo7Y0twanftm4iZyU0jYH
      6WKxwGQy2XJKwuBTirIorXd92dQbfWyMMSRJIjNNpGmrjh1ysBnHMaIowmw2a92rFVMjRMY9
      6/OsiMZmCOvEIYRMuxJFWwc9tdu1kxzXJQVcHe+TEJHv4854jHmj2oyjCMfDYYdzTOMY0ybV
      hQtcXNLWT1fwfl9Qv6n+HQquFDH7RL9CdH2LcJ1luFqvkRYFasHheQJHI9YJ9eNwn7mog6O6
      qnfGqKsVqj3P83D//n08ffoUZVm2znLK315PsWKTljYGuNlscHMjXdFUviJ19ZGNkSjfIlNV
      09+rcVBKsVqtMBgMOtLaJAAdP8y51/ug2vl6zvN7gFKKO5MJTkcjwCAUG5L0cU+zrOuZWizX
      uYUOqj+HBu2Y/TQJx5zcfXoqIdLN4dntLeZpKnVnKjAZAIEHADVq3mRIYwMEXrRTp6qHEWnw
      CmpXA21jpJTi/v37OD8/R5IkuHPnDgghLfL3SVDVD845lssllsslfN/H6elp63qhvlUbFzYV
      qCgKp4uIDmVZIs9zDIfDnR0rmypptmVjfAB2bYA+FUNfeJerrvktYDdoXVRqShQbVzfBhaC2
      vph16wujHwK5bA39N2PMulmgE5+tL/qztCgwTxK5WUCA6ZAg8HZ3n8ahvMDOpnq4xu2yMXTC
      JYTg4cOHWC6XePbsGcIwxHA4xHA4bPfo9bVW3+tqThRFuLuXWZ4AAA0RSURBVHv3LuI47twn
      Yaqveh9cEsWGc4QQJEnSqjJmXWborjr7cM25Dp4yjF7EhVlHGh2J9M7riGHWq7fpomId9nFo
      EyFU3ToX6Dve1+twbQvqoC+OOW82hLTp/Orvq9UK4zhGWVXI6xKM2lVK6QKym25c1W/7xhy/
      61lVVQjDEC+//DLm8zkWiwWur68RBEHHDiBEni+kaQpCCEajER48eNBGfunnG6YEtjEp5dZi
      qkG28Smur6SFSciqTZX63cZgFU7qc+ER0j2tc+mytkm26bdmx20EotrUwUUsh4DZd/O0tg/x
      bVxzXx/08dgWWj8/sMVF6wyEC4GsKFALgSgQYAahquxo3c1ke3900BmMaQPpc1NVFcqyRBRJ
      9ero6AjHx8fgXF5inWVZp+7xeIzT09Od2yHN/phahW19GWMyS0SWA4w1UtCNcyrMUvdW0Ots
      1UHLNVQunPP0SvaJbhcymdxfUZnqqOlbYroe6G24At71idPrNL93TboNzPeH6O62cfepYPsy
      TddCoBYCccAxGXQTV3lEeixyIX1iXNknTKlitmcilU6QusFrItxgMOjcymLiij6PulOeSyUz
      +4uyxLM/+VMkT59i9PpruP87v9O57MImNVUbNpVTd5S0xWDb1K9OWhR9gC7EsSGH3hG9QRsn
      MAdngktVMfU8lySyEdrXjVBT47FNoNmWqXKZCK8jX1XXqBqdeRwHncuuGfEwCWeQGZ2bBFFG
      s7a5ALaXaduI00TOoixQ1xUIpSAgEBCdnJ6qzzoB6Outb8eaXqkuUHNVfvZZG8C++A9/haP3
      3gPVMljYoCgKlGXZIcSa162bCKW0zQxyiBTvKF666H4RdUSfmMvVCj5jmA0GnXcufVx9d7PZ
      YBJF8AwdT02sS40wn9l+u+yLfWrdIdCHYDbGopfhjQoEALPoBEGPHnxov17kIE8IgcpLUUJT
      kUAwC08hwDHPrgEBTKIjBF68MwZzDYUQreHsaq9TfjQCYQyirkF8H2wQw/M9qCxxOuR5DkJI
      5zpXc47zPG/vNtYlnamWdtQq1YApMlwTqQ/C3B0o6xpX6zUIgLGGzLo7rE0dKKoKz+ZzsKMj
      TIwzARcxuuJRXd+ak29y8n3qjCkpdXXN9Z3N6NLb9BlDwBgyIbBIU5yNx9ZxqG9thGxTiVzv
      bf2WO0va2hOCtFojKzMEXoSS5xDCbSvpcMhhoF4uun8fD/6r/xKbTz7F5JvfQHB0bC1vahO2
      upVrg/rtKqdLDkJI/0GYrSM2IISg5hzLNEXdVHy+XOL+bGZFLP3ZMstwsVwi9DyEemznnr4c
      wrX1SbM5qbl06b5x2zi8qw82ZDT/Dn0fWVWh2hPS6eqnSdh935rPhBAYBzNsyiVqUakakVWp
      TFxLGAJ/goDtXlzX14ZrjkwQQmD45psYvvnmQQzXJcVVm2onyWSO5lqrd3VdbyWAS7e1DdKs
      bJmmeL5YIK+q9tkk2s0dqXcYkJz/i5sbCEinuCc3NzgeDnHawwn1vti4uq0tG6LbOJrOHW3j
      NvtvvtvXPxuMwhCLNN1LADZGYqYkAdwnt3pf9XoY9TqZntXzyIsxCMbOdCumhNTtLVeUYB8C
      u2AfMdnW/JC5VxpMhwBcHTN1Wd3AEwC+XCwghMAkirDKc1AAgzDsfGc7OMsaY8VnDItmu40L
      jrwqEbCuPvwi/TOR3EQIc9tSf6//Ng9o9PGr92Y9tjr7FnnUzFNalqg5b7O7meBa/L42XS4L
      3Z0aeXkd5xw+DTAMJ23mBILdnSed8EwVWP+tMxS7f5a8bKOuOKJwq/aaHFu1o2KZ96272Vdz
      /cy/rVckuTpjHSjnCD0P4yjCsjnOj8MQXnPA4UJ+IQQmcYw7VdW6AQDATbLCbbLCKGYgwkMY
      1IjZCINwZO2HSeH6Vtg+VcokEjP80yZVbGJVn3hgq4PuywRBiNybjn0fmzxH1UMAevuu3zo3
      1o0+EwH19VhkN60NEHgRfBZY67UxEJdKpDMLl2qZVxk25QpDNtmRsGZ9eZ4jz3OMDc3AJo1N
      JmWWN9eNqhc6MtgGZnuvJvrlkxPMBgNZMYBRQ6kmN9brVQs0iiLkrSQQqGuBshaYb2ps8kL6
      u1vwVz9y16FPlzT7b5scfSL1sjauYgabuCSRrQ9tW5BSAACSJtrJBMVIbOOxiXrd4c3Gpc3x
      teoQ6WZkNkMebe2adbj6b7bv0wARGSEMtnmNbH0jhODy8hIAEEXRziGY2Q/TPVsvr6tnCjq3
      ROod0TtvHubYpELZiPBHx8cYavq/beF0RIp8H6+enaGsSxR8AUII1inHOgOGQwZgSwAmFzIH
      a7apL6ZrfDbxbBK+2bY5D/vUAfO3OZdxc3S/zvNOjk/XgaF6ZnMKc/XVhDYSixAIkBb5bSfG
      rvGquTXxQ9Wv+mTTAOqaIzKQX7Whn2IvFgsZ99CERJpzaTt3UH3UJbpNG2hVIFOn1SvUEcy1
      yEIIhL6P1+/ebW/9sH1vgio3DEOUNUGZyQlmVIBRIPZDDIKokxxJ/1b3edfrMzmv7dzBRHQ1
      8fpi2pCgD0yub37r5JJNuaQowBukVP1W39n6rZ+Kmm0c0m/RpJYYBhNEbND+ve97G+H3lTcZ
      bFmWrXTSubYC3UdpuVxiPB63sc2mZNZVPbPvLqalQ9uqzpl18eJSg2yVmtfU2BBNr6vzN7bt
      hQED5wTrTOaHZNSztm3TAfXn5umsrW96XeYEu753qYv63JnfuVQGpTYCQFnXSLW7uvQ1sEkl
      4DDnPROKOsemWCEp1gABQibdHRjdPUG29Vn9bRKobY1MG0n575s2k228V1dXODk5wWazwXQ6
      3ZEUtvGaOr45BhOcu0BmpaoCV7k+wjgEGGFtwqSa1/C8DTzaz4HNd2m5gYCm4wkg9ofQL4je
      5xVqK3fomPfpy/qi6XX6Wtbiq/UaA+2m9H1jNtvuK6Mgr2RO/YA28deE7vRZ/V1VVSfGuM9X
      zAV6XUqd2Qcq+F21qTxOzTG7uL/53iadCbEkxrKBSfmuhTlEbJp/q28Y9TAK5A0nZV3gZJxh
      oHkc2riSCVmdtHvakrMShN4AFG4DyzZWnZO7xqR0S31L2MVxdMS0nTOEnodpHGORJFhlGdZ5
      3iYH6AO9/kPnSL3PqgR+EGAYjHcQSB+LpxGnTiS645s5Z7aNiBdBfiFEeyWqSurbx2D71kiB
      i3A7u0B6B/r+tnV4XzlTpbCVU88VMYTedjfJRf3tc4I2YZS6OlNlUDDF8CFgLmrfe3Me9Pcm
      RzIdy9S/l6ZT+I398ez2tnWSM+fW1X9FXK61U/+44CjqDIwwhN5uKKqO1GrNXHWaNhchu9F1
      Su0Bds9fbPUq1UchfVmWGDQ7jGa9tt9mmT71DMDuNqiL0myLbW4p7ZMATPMN6tNrCQhif9ga
      v7oXqLP+xpORgGAWy4vWjqLTVrzbDGXdgLS9723PUAtNpHbVoSOPvovDKMXj42MEnoeSczy3
      5PM358n2zLX/LYRAXqdYF3MAQOQPrFJ7x0ikdGd8pleuzf5RoLar++I/9O9U6ONsNusE7Kvy
      ptG/D+fMtTdVVKq/MDtmq9CcWP13HyW+CKiUF/rfNmIzF3DgjzDwx6CggCBQNw26+qIvmi1b
      m87lVB9skW7quU3Mmgut/rdt30VBgLPRCBAySEYf9yEL7doRkS7DFdb5EnmVgYv9dz7r//dt
      jfZxZoWsLg9REzGFkKGW4/EYnHMkSdLmMQWAss4xz66wyK7BBd8hBtdYzDnRoSUAfQAuzmBO
      rH6wYOPSJpLYRJ45GYrD6Itpm/yOWG8WKPaHiLyB1X26HbChs+u6vCnpTNFuIrhezsY4dI6p
      z5FtfhUcDYcYhCGKJieovkWtI7lqS0cC838FnueBg4OQfiNa3zc3QV8/U8Lp82luldv27s2/
      9XnabDaI4xjr9RpxHHclB2nSQwre3jJvwzlTsrikDSHEvgtk0/H6BmHjOCYXVQuXFgXOm5gB
      LgSmcdzGDphEoNfp0jsB9/mEDWynkjbxrPqhz4ltLlx908HGlU3Q24w8D0megxuIbh7a2US8
      C2pRthmWAXldalalOBnc3WnfdpJqqg590t7szyHSRq+XMYb5fN5mrlNlAhbKpL9CgNDufJpr
      oD/X29lR8czOv6i6YnI+U0fUKW+eJHg6nyMtCizSFKssw+1mg0yL8NG5sknNeucPUQ1soEsX
      Gyh1qG8eTAmh96OPux8Kx00amY2WCErl1tER0xU+auPgsGSUUDe46C4PuiQwCU1vw0bQfecu
      rht8TKkCAKvVCr7vd26A14FSCliWxyahTSZlgmd6NOoD+qpgIkhelvAZQ5LnHb9/BVfLJe5M
      JjuOYKYIMwlNR7ogCDqps78u2JFod3xfp4wLfEoxCUMIwxZy9dGlGupABIVPtfyeBBh4o5bY
      TYlta1cn+EpzfTe/7eurDfS5CsMQZVliPB532tgHJs65bBOzf/8/61t+eKlZILIAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Violation type' width='192'>
      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
      UyZ5nP8F5l2wk0QJ1CgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
